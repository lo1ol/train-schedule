(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.2' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[     80982,       1675]
NotebookOptionsPosition[     80117,       1645]
NotebookOutlinePosition[     80490,       1661]
CellTagsIndexPosition[     80447,       1658]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[BoxData[{
 RowBox[{
  RowBox[{"SetDirectory", "[", 
   RowBox[{"NotebookDirectory", "[", "]"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"workingDirectory", " ", "=", " ", 
   RowBox[{"CreateDirectory", "[", "\"\<../shown results\>\"", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SetDirectory", "[", "workingDirectory", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"file", "=", " ", 
   RowBox[{"OpenRead", "[", "\"\<../logs/log_sort.txt\>\"", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"workingDirectory", " ", "=", " ", 
   RowBox[{"CreateDirectory", "[", "\"\<sort\>\"", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SetDirectory", "[", "workingDirectory", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"filelist", "=", " ", 
   RowBox[{"ReadList", "[", 
    RowBox[{"file", ",", "String"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"quickSortResults", " ", "=", " ", 
   RowBox[{"filelist", "[", 
    RowBox[{"[", 
     RowBox[{"2", ";;", ";;", "3"}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"insertSortResults", " ", "=", " ", 
   RowBox[{"filelist", "[", 
    RowBox[{"[", 
     RowBox[{"1", ";;", ";;", "3"}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"insertSortResults", "=", " ", 
   RowBox[{
    RowBox[{"Map", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"StringSplit", "[", "#", "]"}], "[", 
           RowBox[{"[", "4", "]"}], "]"}], ",", 
          RowBox[{
           RowBox[{"StringSplit", "[", "#", "]"}], "[", 
           RowBox[{"[", "7", "]"}], "]"}]}], "}"}], ")"}], "&"}], ",", 
      "insertSortResults"}], "]"}], "[", 
    RowBox[{"[", 
     RowBox[{";;", 
      RowBox[{"-", "4"}]}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"quickSortResults", "=", " ", 
   RowBox[{"Map", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"StringSplit", "[", "#", "]"}], "[", 
          RowBox[{"[", "4", "]"}], "]"}], ",", 
         RowBox[{
          RowBox[{"StringSplit", "[", "#", "]"}], "[", 
          RowBox[{"[", "7", "]"}], "]"}]}], "}"}], ")"}], "&"}], ",", 
     "quickSortResults"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"insertSortResults", "=", " ", 
   RowBox[{"Map", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Read", "[", 
          RowBox[{
           RowBox[{"StringToStream", "[", 
            RowBox[{"#", "[", 
             RowBox[{"[", "1", "]"}], "]"}], "]"}], ",", "Number"}], "]"}], 
         ",", 
         RowBox[{"Read", "[", 
          RowBox[{
           RowBox[{"StringToStream", "[", 
            RowBox[{"#", "[", 
             RowBox[{"[", "2", "]"}], "]"}], "]"}], ",", "Number"}], "]"}]}], 
        "}"}], ")"}], "&"}], ",", "insertSortResults"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"quickSortResults", "=", " ", 
   RowBox[{"Map", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Read", "[", 
          RowBox[{
           RowBox[{"StringToStream", "[", 
            RowBox[{"#", "[", 
             RowBox[{"[", "1", "]"}], "]"}], "]"}], ",", "Number"}], "]"}], 
         ",", 
         RowBox[{"Read", "[", 
          RowBox[{
           RowBox[{"StringToStream", "[", 
            RowBox[{"#", "[", 
             RowBox[{"[", "2", "]"}], "]"}], "]"}], ",", "Number"}], "]"}]}], 
        "}"}], ")"}], "&"}], ",", "quickSortResults"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Plot1", " ", "=", " ", 
  RowBox[{"Show", "[", 
   RowBox[{
    RowBox[{"ListLogPlot", "[", 
     RowBox[{"insertSortResults", ",", 
      RowBox[{"Joined", "\[Rule]", "True"}], ",", 
      RowBox[{"PlotStyle", "\[Rule]", "Blue"}], ",", 
      RowBox[{"PlotLegends", "\[Rule]", 
       RowBox[{"{", "\"\<Insert Sort\>\"", "}"}]}], ",", 
      RowBox[{
      "PlotLabel", "\[Rule]", 
       "\"\<Compare quick sort and insert sort (Log scale)\>\""}], ",", " ", 
      RowBox[{"AxesLabel", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"\"\<n\>\"", ",", "\"\<t\>\""}], "}"}]}], ",", 
      RowBox[{"PlotTheme", "\[Rule]", "\"\<Detailed\>\""}]}], "]"}], ",", 
    RowBox[{"ListLogPlot", "[", 
     RowBox[{"quickSortResults", ",", 
      RowBox[{"Joined", "\[Rule]", "True"}], ",", 
      RowBox[{"PlotStyle", "\[Rule]", "Red"}], ",", 
      RowBox[{"PlotLegends", "\[Rule]", 
       RowBox[{"{", "\"\<Quick Sort\>\"", "}"}]}]}], "]"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"insertFunc", " ", "=", " ", 
   RowBox[{"Interpolation", "[", "insertSortResults", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"quickFunc", " ", "=", " ", 
   RowBox[{"Interpolation", "[", "quickSortResults", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Plot2", " ", "=", " ", 
  RowBox[{"LogPlot", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"insertFunc", "[", "x", "]"}], ",", 
      RowBox[{"quickFunc", "[", "x", "]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", "0", ",", 
      RowBox[{"10", "^", "5"}]}], "}"}], ",", 
    RowBox[{"PlotStyle", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"Blue", ",", "Red"}], "}"}]}], ",", 
    RowBox[{"PlotLegends", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"\"\<Insert Sort\>\"", ",", "\"\<Quick Sort\>\""}], "}"}]}], 
    ",", 
    RowBox[{
    "PlotLabel", "\[Rule]", 
     "\"\<Compare quick sort and insert sort (Log scale)\>\""}], ",", 
    RowBox[{"PlotTheme", "\[Rule]", "\"\<Detailed\>\""}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"Plot3", " ", "=", " ", 
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{"insertFunc", "[", "x", "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", "0", ",", 
      RowBox[{"10", "^", "5"}]}], "}"}], ",", 
    RowBox[{"PlotStyle", "\[Rule]", "Blue"}], ",", 
    RowBox[{"PlotLegends", "\[Rule]", 
     RowBox[{"{", "\"\<Insert Sort\>\"", "}"}]}], ",", 
    RowBox[{"AxesLabel", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"\"\<n\>\"", ",", "\"\<t\>\""}], "}"}]}], ",", 
    RowBox[{"PlotTheme", "\[Rule]", "\"\<Detailed\>\""}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"Plot4", " ", "=", " ", 
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{"quickFunc", "[", "x", "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", "0", ",", 
      RowBox[{"10", "^", "5"}]}], "}"}], ",", 
    RowBox[{"PlotStyle", "\[Rule]", "Blue"}], ",", 
    RowBox[{"PlotLegends", "\[Rule]", 
     RowBox[{"{", "\"\<Quick Sort\>\"", "}"}]}], ",", 
    RowBox[{"AxesLabel", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"\"\<n\>\"", ",", "\"\<t\>\""}], "}"}]}], ",", 
    RowBox[{"PlotTheme", "->", "\"\<Detailed\>\""}]}], 
   "]"}]}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.7166328489078903`*^9, 3.7166328519046392`*^9}, {
   3.7166328898347483`*^9, 3.7166329837*^9}, {3.7166333327978086`*^9, 
   3.71663344430938*^9}, {3.7166336235949707`*^9, 3.7166338793083553`*^9}, {
   3.716633930823107*^9, 3.716634129989297*^9}, {3.7166342836724577`*^9, 
   3.7166343394261303`*^9}, {3.7166344883692427`*^9, 
   3.7166345817832484`*^9}, {3.7166346120671644`*^9, 
   3.7166347025569077`*^9}, {3.7166347332104883`*^9, 3.716634758008203*^9}, {
   3.7166348057320786`*^9, 3.7166348866444254`*^9}, {3.716634934678432*^9, 
   3.716634950151271*^9}, {3.71663498447202*^9, 3.7166349940275564`*^9}, 
   3.716635906785164*^9, {3.716636077735529*^9, 3.716636293193735*^9}, {
   3.7166364065775924`*^9, 3.7166364078924465`*^9}, {3.716636437995269*^9, 
   3.716636450019704*^9}, {3.716636515873743*^9, 3.7166366509453373`*^9}, {
   3.716636681553017*^9, 3.7166366860059395`*^9}, {3.716636720243805*^9, 
   3.716636748869069*^9}, {3.7166369194524918`*^9, 3.7166369675112753`*^9}, {
   3.7166370306581407`*^9, 3.716637354908517*^9}, {3.7166377197330723`*^9, 
   3.7166380176722183`*^9}, {3.7166384508211837`*^9, 3.71663845744549*^9}, {
   3.716638505947996*^9, 3.7166387679333057`*^9}, {3.716638803632849*^9, 
   3.716638967416075*^9}, {3.7166390763614926`*^9, 3.7166391959590697`*^9}, {
   3.7166392388178177`*^9, 3.7166394545961475`*^9}, {3.7166395395713806`*^9, 
   3.716639659498789*^9}, {3.7166411022356586`*^9, 3.716641103250759*^9}, {
   3.716641711133936*^9, 3.71664172025766*^9}, 3.716641753683111*^9, {
   3.7166418141201677`*^9, 3.716641816476329*^9}, {3.7166418609206142`*^9, 
   3.7166418675560446`*^9}, {3.716711296988597*^9, 3.7167113173939104`*^9}, {
   3.7167113619186044`*^9, 3.7167114625600986`*^9}, {3.716711574748316*^9, 
   3.716711620907818*^9}, {3.7167117109591064`*^9, 3.7167117237280517`*^9}, 
   3.716711800389514*^9, {3.716712010856454*^9, 3.7167120510507917`*^9}, {
   3.7167120935955935`*^9, 3.716712200076744*^9}, {3.7167122366521745`*^9, 
   3.716712481875655*^9}, {3.7167127637502875`*^9, 3.7167128084013653`*^9}, {
   3.716712874651329*^9, 3.716712924392576*^9}, {3.716712972307913*^9, 
   3.7167129797804585`*^9}, {3.716713023254218*^9, 3.7167130241068463`*^9}, {
   3.7167144145532*^9, 3.716714448598859*^9}, {3.7167145660361986`*^9, 
   3.7167145677412815`*^9}, {3.716714606816677*^9, 3.7167146895122705`*^9}, {
   3.7167147775297885`*^9, 3.7167147781917534`*^9}, {3.716714810136058*^9, 
   3.7167148653152523`*^9}, {3.719593876147151*^9, 3.7195938788610754`*^9}, {
   3.7195948476813374`*^9, 3.7195948487839537`*^9}, {3.719600981108471*^9, 
   3.719600998745492*^9}, {3.71960106299724*^9, 3.719601064779143*^9}, {
   3.7198294610534472`*^9, 3.7198294662886443`*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"CreateDirectory", "::", "filex"}], "MessageName"], 
  RowBox[{
  ":", " "}], \
"\<\"\[NoBreak]\\!\\(\\\"C:\\\\\\\\Users\\\\\\\\Petr\\\\\\\\Desktop\\\\\\\\\
Projects\\\\\\\\Programming Techniques\\\\\\\\shown results\\\\\\\\\\\"\\)\
\[NoBreak] already exists. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/CreateDirectory\\\", ButtonNote -> \
\\\"CreateDirectory::filex\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{
  3.71671280911168*^9, 3.7167128758761096`*^9, {3.716712925028591*^9, 
   3.716712928857549*^9}, {3.7167145563215847`*^9, 3.716714569312237*^9}, 
   3.716714638027997*^9, 3.7167146943829775`*^9, 3.71671475818911*^9, 
   3.71671487496727*^9, 3.716714906557728*^9, 3.7167152555111136`*^9, 
   3.7195948523607464`*^9, {3.719601044590096*^9, 3.7196010663455706`*^9}, 
   3.7196426832074575`*^9, 3.719651030196749*^9, 3.7196764639164753`*^9, {
   3.7198294710374985`*^9, 3.719829473153493*^9}, 3.7198319329271383`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"CreateDirectory", "::", "filex"}], "MessageName"], 
  RowBox[{
  ":", " "}], \
"\<\"\[NoBreak]\\!\\(\\\"C:\\\\\\\\Users\\\\\\\\Petr\\\\\\\\Desktop\\\\\\\\\
Projects\\\\\\\\Programming Techniques\\\\\\\\shown results\\\\\\\\sort\\\\\\\
\\\\\"\\)\[NoBreak] already exists. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\
\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/CreateDirectory\\\", ButtonNote -> \
\\\"CreateDirectory::filex\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{
  3.71671280911168*^9, 3.7167128758761096`*^9, {3.716712925028591*^9, 
   3.716712928857549*^9}, {3.7167145563215847`*^9, 3.716714569312237*^9}, 
   3.716714638027997*^9, 3.7167146943829775`*^9, 3.71671475818911*^9, 
   3.71671487496727*^9, 3.716714906557728*^9, 3.7167152555111136`*^9, 
   3.7195948523607464`*^9, {3.719601044590096*^9, 3.7196010663455706`*^9}, 
   3.7196426832074575`*^9, 3.719651030196749*^9, 3.7196764639164753`*^9, {
   3.7198294710374985`*^9, 3.719829473153493*^9}, 3.7198319330317116`*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {{{}, {}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[0.012833333333333334`], 
          AbsoluteThickness[1.6], 
          RGBColor[0, 0, 1]], 
         LineBox[{{5., -10.675970964167545`}, {10., -10.146276856097304`}, {
          50., -7.803393270071882}, {100., -6.359329770012799}, {
          500., -3.121104132681886}, {1000., -1.025620929301787}, {5000., 
          1.5996340369314992`}, {10000., 2.9006774759499545`}, {50000., 
          6.397392769485167}, {100000., 
          7.795513480960218}}]}}}, {}}, {{}, {{{}, {}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[0.012833333333333334`], 
          AbsoluteThickness[1.6], 
          RGBColor[1, 0, 0]], 
         LineBox[{{5., -9.849292390983102}, {10., -9.149224767578604}, {
          50., -7.919382583274244}, {100., -7.272659416813062}, {
          500., -5.303562632413114}, {1000., -4.4829594822306476`}, {
          5000., -2.8006526115241575`}, {10000., -1.9368718123336988`}, {
          50000., -0.14454630039847735`}, {100000., 0.6609014463075369}, {
          500000., 2.462696803089997}, {1.*^6, 3.201895675621389}, {5.*^6, 
          5.009878930817822}}]}}}, {}}}, {
    DisplayFunction -> Identity, GridLines -> {Automatic, 
       Charting`ScaledTickValues[{Log, Exp}]}, DisplayFunction -> Identity, 
     DisplayFunction -> Identity, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, AxesOrigin -> {0, -12.016643222281658`}, 
     PlotRange -> {{0, 100000.}, {-11.70216454445242, 7.795513480960218}}, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, False}, 
     AxesLabel -> {
       FormBox["\"n\"", TraditionalForm], 
       FormBox["\"t\"", TraditionalForm]}, 
     AxesOrigin -> {0, -12.016643222281658`}, 
     CoordinatesToolOptions -> {"DisplayFunction" -> ({
         Part[#, 1], 
         Exp[
          Part[#, 2]]}& ), "CopiedValueFunction" -> ({
         Part[#, 1], 
         Exp[
          Part[#, 2]]}& )}, DisplayFunction :> Identity, 
     Frame -> {{True, True}, {True, True}}, 
     FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> Automatic, 
     FrameTicks -> {{
        Charting`ScaledTicks[{Log, Exp}], 
        Charting`ScaledFrameTicks[{Log, Exp}]}, {Automatic, Automatic}}, 
     GridLines -> {Automatic, 
       Charting`ScaledTickValues[{Log, Exp}]}, GridLinesStyle -> Directive[
       GrayLevel[0.4, 0.5], 
       AbsoluteThickness[1], 
       AbsoluteDashing[{1, 2}]], Method -> {}, PlotLabel -> 
     FormBox["\"Compare quick sort and insert sort (Log scale)\"", 
       TraditionalForm], 
     PlotRange -> {{0, 100000.}, {-11.70216454445242, 7.795513480960218}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {Automatic, 
       Charting`ScaledTicks[{Log, Exp}]}}],FormBox[
    TagBox[
     GridBox[{{
        FormBox[
         TemplateBox[{"\"Insert Sort\""}, "PointLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.231], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.231], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"PointLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.012833333333333334`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 0, 1]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "True", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"Quick Sort\""}, "PointLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.231], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.231], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"PointLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.012833333333333334`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "True", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}}, 
      GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      GridBoxSpacings -> {"Columns" -> {{0}}}], "Grid"], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.7167128159135*^9, 3.7167128757469964`*^9, {3.7167129248189354`*^9, 
   3.71671292881151*^9}, {3.716714563280467*^9, 3.7167145773669434`*^9}, 
   3.7167146379649534`*^9, 3.716714694385979*^9, 3.716714758201618*^9, 
   3.716714875340027*^9, 3.716714906915137*^9, 3.7167152558578587`*^9, 
   3.7195948525276375`*^9, {3.7196010448742824`*^9, 3.7196010665136275`*^9}, 
   3.7196426840875797`*^9, 3.71965103072516*^9, 3.719676464515484*^9, {
   3.7198294718820944`*^9, 3.719829473473219*^9}, 3.719831933199253*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"InterpolatingFunction", "::", "dmval"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Input value \[NoBreak]\\!\\({2.0428571428571427`}\\)\
\[NoBreak] lies outside the range of data in the interpolating function. \
Extrapolation will be used. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/InterpolatingFunction/dmval\\\", \
ButtonNote -> \\\"InterpolatingFunction::dmval\\\"]\\)\"\>"}]], "Message", \
"MSG",
 CellChangeTimes->{
  3.71671280911168*^9, 3.7167128758761096`*^9, {3.716712925028591*^9, 
   3.716712928857549*^9}, {3.7167145563215847`*^9, 3.716714569312237*^9}, 
   3.716714638027997*^9, 3.7167146943829775`*^9, 3.71671475818911*^9, 
   3.71671487496727*^9, 3.716714906557728*^9, 3.7167152555111136`*^9, 
   3.7195948523607464`*^9, {3.719601044590096*^9, 3.7196010663455706`*^9}, 
   3.7196426832074575`*^9, 3.719651030196749*^9, 3.7196764639164753`*^9, {
   3.7198294710374985`*^9, 3.719829473153493*^9}, 3.7198319332567935`*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {}, {
       Directive[
        Opacity[1.], 
        AbsoluteThickness[1.6], 
        RGBColor[0, 0, 1]], 
       LineBox[CompressedData["
1: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
IulaRPgfIMofgA==
        "]]}, {
       Directive[
        Opacity[1.], 
        AbsoluteThickness[1.6], 
        RGBColor[1, 0, 0]], 
       LineBox[CompressedData["
1:eJwVzWdAze3/wPHTOs2btoQWKlKKUkjfT1mVtLgrRWYlpSkSWkgDDanuEC3K
ae8h19Vpl/Yg0jyThvYR8v/9H70fvB68FS94Wjtxk0gkPi4S6f+b+8pDOyyW
Q1DkHjs4YWUcKu4Rs0IxgOcTNvNn/BTw5PmegnKKOSgflNXMUJbHZl/LRCpJ
tpCuGhupmbgJp0bwGiZQHKFm3U7HwqMb8S/Z7Kq9ahdB73rHYXR6A1ae7TyZ
RXKBzbnV8afiZbFl09K09MAVKAHpg/sn1uNbLzZF3Kd4APWu8Zk3Rutx7940
sQDwhrTvdc+s8mQwK6PUUUvNF+x8HqY4bJbBEreGOC9JNyA4yERrr9I6rMqY
OWz73R+EKDx3M7KlsYEVz5M1AwGgvvS+yUJHGp94Jz3agG/DU4mIpLx6KXxZ
Zbv6HUogXOiWMbK1lcJEi9wB2WPB0O9buqFrVRK3BmZN+EEIvNCYm2osksQn
tXdFduuEQlDs72AvN0k8wq7WVFe7C24KXuXuqpL4ysvDH8MV7kFnzQd0mS2B
F0523qFJ3Qed43ZfN+ZJYCE83vqM9ABoTacyqg0lcLyfu/fy4gM48SVBGUQl
sLza0roT38OhV6byUt6YOH47GvQ+bzQC5mw2VI6VimPtBEEnoYFIGK3U56t6
KI7RsSfCzm1R4M2NNDc4i2NTrk1FtfghKE1oo0lDcXzWXfOvP+UxuNtYbo4m
ieNvilWZfa+iITMuyK5tRAxXfVdUljkWA38GWxNUq8Xw4VTKB1+IBZbn67SZ
a2LYXgStV1N7AgftcqRM50WxApNn6lPmEziy38lqrE8U02uNcZhCPFStM5Tc
XS6KvW70OI9LPYVXL0aOM+6I4vvj9OL/SIlgod9DbhEXxaY12x8cvZUIDMJv
6vPcWiya5Gm/uJgIQZ5qPlq1a3Hy8Z8kq+9JkCq+OW/s3FpcUCFiLjCQDHYG
AXEXKWvw58e7WdcpKZBZ7x3Icv4H78lNc7uu+RK0l/PDXQ3+wU/axGb8Sl9C
k4W3XI70P1iZlxNQdfYVLMsPyp9vEcHDMBBS6ZoKyp6RymRdESzS9ejg3pxU
MO+CI/9IiuB9Zw/zVU6nwsVYPdmiWWGccKckvMI3DYibfRGNecLYoiouuvxO
Ohy/tev2+53CONDE1EoXp8M+qxySjZgwzvnEJVHOnQFw4ZuGz7wQFlj2Sih7
kAEmmkesNCqFMN5t8aI0NhN2rUt57WsqhLVyhSnFmW+AS8Ml2TVUEJ/Tr3Pf
zXoDRtde8Bi7CeLHbQEaxduzwGFj90TUSUH8jc0uLMrPghWn/GgDVUGcptxc
UViZDZXnasV29AngrtKgAK3f2UBde8pMHAvg1UO6+oUGb0Ex+eexkzkC2P7i
a1RQ9xZSzJoSmfcFsMSre4357RT4N3TCX+uAADbaqR++UzQHQm5syPqiJoC9
3s+b5FvnQDLvz+jPsgL4w9CF9ryPOWAb6JTT+5Mf31tv2Jc7lgvN1dFtr6r5
cVEW56n6ljzwKBvSHc7hx6O6Bba5znlwVc39qlsKP9a3kf+S8z0P1Mp1THxD
+fFi3J8xymI+bJ4LHNhhzo9FhkPw2PoCcLJMXXxrxI9T5nhjpvQKQGd4hO2m
y49rNwjv5LtRAMHVlu6livxYwGPdVe35ApDQiXh5/icZJ4cm64N4IVx6ziUy
O0PGaombRMy0CuFA5rPVWgYZm+PNlIuehZAiYaCq2k/GT8U12XHfC0HdV8WH
t5SMlVWKK1KEiuDfsj+9KblkXLF/T/jbbUXQLeyYHPCajIcu6atQXYrgTbZ1
ylISGXvcREvtYUXwNvyLSGIcGf99ZNQ4mFkEOnXThjcfkrFSubHT7EQRHAvd
nsQTQsYlbW3af7iLQcDPQDznFhkfGTXnFVQqBpmhft7E62T8aaG7V9KwGLQv
OWfXe5Oxq+C/6QrnisGYu8ZA5yoZr2z65LMjqBge+UsKsi+T8cNdDkZ6KcVw
21slhn2GjOWODosdqimGOwUuzw9YknGBw/kxi6FiGKZ19aUakbGRF63A4Vcx
lN5L4EjpkHHfPZdgF9kS6J1Sb/5PhYyXc6/KB9mVgFk11adThIwNSAFn8vpK
QC850WPyIx9uy4gbFGkvBWdj6VPvvPgwY6quu6WmHLTfLVmfo/Di2AyzzrpT
CA46Us37Friwtd3xzc0BCLJibc70srmwuIj5jQ/PEHxZvXbx4zAXjvO1kO//
ikC6WEF2upkLmypm685rYpiYLfrv5AsubPaD8oC3FINhyPZvP49wYYvHhSoq
NbVwlbtWw+oFCWuyCq2y22tBs2Oz/kAcCYsaFd1SG66FTp/qJsdwEu5aLOrc
+bcWVNVc9gT4krDlmZIbeoZUeB+3fHfQhIStd5Q3mTRQQXo1r8Np+i+yaX3n
4t5eBy9F/vtwtGQVlbSKRvQN1UENdavajoxVJNZ26a3+ZB18fEoR2Bi/ij60
iUyJCNfDrRgpHrlrq8io/bRPrnE97FWtPp6tvYo0un7fnq6rh5jsPU5d5X8Q
eUA/zquqAbaGN/GTGn+j8rF37669aYL2Fb90nb8rqFNq7ROhvja4HnPi/Gj8
MuKXqLuxeaoTyFW8x58VLqAW2wKZryPdsDRSSU86OYfctFX3eM71Qtf1NQdO
iP5A5aOSBnisHxLg53H/M5PoifeuduumjyDZ/zLKaw0btYr+3LhjYBDuw9EZ
8kc6ogRp29bXfoEDDedvdCpPINZvGev0ga8wwc8tnBk1ikodNfrqxkZAxK+o
IiRqCEkZn37VTRsF/276YeumT2iVuVh2aWoMGrrXKnFp9KN3My1GtrRx+EdO
f0uyYQ/ixAYk32eNA9kut75fpwdpa6vNFU+Og+zuFr7123sQxf9hqujiOPQp
RDqXifegZC4LUivfBDhrnY40o3WjGxJ9NfoqExAv3JFGD+9Gu3SH9ZSuTMCK
31Jpw8culBU4pzE1MwG1w3lLmjKdKDe0UFBgYQJOHHtk2MLbiYrCvGhKnAnI
HNo65znbgaofT/9nR6IB+hIQwmrtQB0p33jrRWkwcmbbobDADrT4fvxzshYN
KB4+2JfVjoz+9oQZ+9LgSEVqoHjTBzQUVDycvkSD01c0kkzyW1Hw1aO6/is0
MBdsbwx71Yq2OHyJNlulgUCT0JWu2FbkvofHcJGPDmG3i9dEXGtFfyat049I
0WEv5XZv9L5WJGc/58LeTQfh2SLX+eYWdE5ba1bDmw5nE8+aSs40I16lBhMe
PzpcTnvrNDrWjLLWnkr76E8H9+Ytfyr6mtGPb8EngoPp0LTOLC26qhmFpHaV
dkfT4VNsWHdPWDNKW+MVcC2PDpqCSeqFis2IzsrjqfpOh7vcQdXd55rQa9V6
9ugMHZhMNxHtk03I+fJgJ//C/9xLUyHzaBNiMXme//ubDuPKcvHFGk1okmGn
PSvCgK0J11tC/jSiORq3k6oGA/KjTGxoLxoRacymMcGLAbWzKdta2Q2oVsE9
p+YaA6blzP6SRxpQ6LmQOJo/AzotTd5b9zUg3lGK464QBuBc0VVp1ID4R0jL
7bEMMCXq86yfNqA1X9+q8BUzYFfaV62kQw1o4+BquO8iA7LvrNx1yatHt7nZ
kyd+MkA9fuv6Da/r0ZBar6X2Hwak/C77+uVFPXoR+EZmkZcJ6zMif917VI/k
tlhmXZdkQkO+YoXf1Xok75nadHM3E+Ra7xT27KxHwUlRava6TOBvqCPbq9aj
0Vq/6H37mTBImX49rVCPXkma2v4yYkKWiWknIV6PFKrmGLetmfBhvf5CyGId
UuI7RA72ZsLQzqT9D97XoVANjSvn/P73b0xQopXXoXFbmQ64yYTASTdf88I6
lP528ilXCBPC9vTYH8uoQ1ssn269G8MEEYfxAEZkHdr6jHEoLJ8J+6/HD6fb
1yFVrYi7D6eY0LO3nW3KW4es3oVcOTXLhFjVGl6fv1QUcDTASnmRCRvejJq8
XqGi9jNu8vg3E2QdD57eM0tFPpHHq+eFWSBn00JbGKaimgmxefvtLHB2t6dM
vaMihofQZxUNFviGbH/MqqAi0RXu2gUtFrSwBqk/SqjogujC48d7WXDX9uCO
bblUJHBgYDvVmAUSbBGTfSlUpNXcIRZtxoLzDyN4XyVTkf2JJo6DJQtCLiqq
SCRSUa5rReOiLQsadkfkKMZQ0cBCQS7VgQWJ0gOSNQ+piBScHR99lgUnyXoz
ThFUtE047dbpiywwVbthsDGMiqwTki9sc2HBlfizfKOhVHRL8YnJ0hUWMCzj
kj8FUFFGTpRmnQcL8uVo36MuUVGH7r11MT4sMK+WvW5kTkXL1Nurp6+zoPGX
mt5vXSp6PuOYHHOfBYPehvY8I7WIaby5ZzmdBftsmr++Va9Ft39RDBtHWVDD
txqVn4wQ9dPWMjqNBUMff11QckNIoOzldj42Czyfp91/vh+heK8nEodmWXDJ
lJH+eug9yqEH0Gu52DCK3FfF5N+joU6TiBolNlgd7yIdzHyHDmQwu0ouscHA
VUzlT1klWjXbfC6dxYYdQbLmx2eK0b/k/vmR4W/Q4dg2ZzGYhgaPfGEi9ndo
lSx92WF/k8j8efMlnpmEpdnD/QViWcQRyRMfFGhT4CJ2XmDuVikhVRZ8asvU
NCgM51/g9UBEJWI5PKDNgDolgOK+t57ofbEQc9/tB+h6/qg3fdBMnJWX37J+
5gfMX+2aipVoJwb6GN5DrrOgWijKknzWRdDaP3nOTs8ChWe3enZrDzG04qK6
x20O7n3e+yyhuY/gnKszEqbPAaovdDpdOEBQhEz+2eU6D3OjPM9Kyj8RJiy3
uHDaPIzGHC2fj/lMBApWNmleWQAv0ZUVdtgQ8fFij6Pr1AIEG/D1H3EdJmTn
wgu6XRah+mER706xUWKhzrUoanIR5l3ix8p+jRKVLUwPv8tL8KbH7UpUzxiR
KrDr0czYEpwKFJf2Sx0nFKJeO1Q7LcM9pTDmnzsTRKRhBa1sdBkyfq1W7DWm
EWU/eASHxpchtpVnR+UxGjH+0kKdi74M6kWJZ/QsaMS+VYbfMfYyNHq9+K1j
QyO+VUnxj84uw5Nr19Q0LtEIU23fbYI8HDjKnLARD6YRQioaHg5bOfCep1Tv
bTmN2DNwMy5YhQN+m6bjFatpxIX7DWWZ2zgQrapTmPSeRlRNnP47o84BI4mN
28MaaMSVV1Ex9/ZwYDn8qZxjL41oXc8uyj3KgYFJj43cMzRiqVn7Y48JByhh
3EF+czRCyT/41/IxDrS+ckxjLdKIgIF1h4wsOVAVmaLW8ZtGbH9ypH/AjgPn
l4NMEoTohI1R3M9f9hx47pZczL+GToTOft2keIYD5v6Dw/5idOKzhZ+z23kO
sNXm/e1l6AT5L46MucgBz2Ias3UDndiVJ5Jf6sSBonhVmf3ydMLxjF3vZxcO
GOq1ClKU6ESkSMbyX1cOJPH0v5NVphP/BzMcdTw=
        "]]}}}, {Ticks -> {Automatic, 
       Charting`ScaledTicks[{Log, Exp}]}, GridLines -> {Automatic, 
       Charting`ScaledTickValues[{Log, Exp}]}, FrameTicks -> {{
        Charting`ScaledTicks[{Log, Exp}], 
        Charting`ScaledFrameTicks[{Log, Exp}]}, {Automatic, Automatic}}, 
     AxesOrigin -> {0, -12.334337634310604`}, 
     PlotRange -> {{0, 100000}, {-12.334337634310604`, 8.754077777636539}}, 
     DisplayFunction -> Identity, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None}, DisplayFunction -> 
     Identity, DisplayFunction -> Identity, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "ClippingRange" -> {{{0.002040816326530612, 
        99999.99795918367}, {-11.375773297403915`, 7.79551344072985}}, {{
        0.002040816326530612, 99999.99795918367}, {-11.375773297403915`, 
        7.79551344072985}}}}, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, False}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
     CoordinatesToolOptions -> {"DisplayFunction" -> ({
         Part[#, 1], 
         Exp[
          Part[#, 2]]}& ), "CopiedValueFunction" -> ({
         Part[#, 1], 
         Exp[
          Part[#, 2]]}& )}, DisplayFunction :> Identity, 
     Frame -> {{True, True}, {True, True}}, 
     FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> Automatic, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {Automatic, Automatic}, GridLinesStyle -> Directive[
       GrayLevel[0.4, 0.5], 
       AbsoluteThickness[1], 
       AbsoluteDashing[{1, 2}]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None}, PlotLabel -> 
     FormBox["\"Compare quick sort and insert sort (Log scale)\"", 
       TraditionalForm], 
     PlotRange -> {{0, 100000}, {-11.375773297403915`, 7.79551344072985}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"Insert Sort\"", "\"Quick Sort\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 0, 1]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.7167128159135*^9, 3.7167128757469964`*^9, {3.7167129248189354`*^9, 
   3.71671292881151*^9}, {3.716714563280467*^9, 3.7167145773669434`*^9}, 
   3.7167146379649534`*^9, 3.716714694385979*^9, 3.716714758201618*^9, 
   3.716714875340027*^9, 3.716714906915137*^9, 3.7167152558578587`*^9, 
   3.7195948525276375`*^9, {3.7196010448742824`*^9, 3.7196010665136275`*^9}, 
   3.7196426840875797`*^9, 3.71965103072516*^9, 3.719676464515484*^9, {
   3.7198294718820944`*^9, 3.719829473473219*^9}, 3.7198319333818808`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"InterpolatingFunction", "::", "dmval"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Input value \[NoBreak]\\!\\({2.0428571428571427`}\\)\
\[NoBreak] lies outside the range of data in the interpolating function. \
Extrapolation will be used. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/InterpolatingFunction/dmval\\\", \
ButtonNote -> \\\"InterpolatingFunction::dmval\\\"]\\)\"\>"}]], "Message", \
"MSG",
 CellChangeTimes->{
  3.71671280911168*^9, 3.7167128758761096`*^9, {3.716712925028591*^9, 
   3.716712928857549*^9}, {3.7167145563215847`*^9, 3.716714569312237*^9}, 
   3.716714638027997*^9, 3.7167146943829775`*^9, 3.71671475818911*^9, 
   3.71671487496727*^9, 3.716714906557728*^9, 3.7167152555111136`*^9, 
   3.7195948523607464`*^9, {3.719601044590096*^9, 3.7196010663455706`*^9}, 
   3.7196426832074575`*^9, 3.719651030196749*^9, 3.7196764639164753`*^9, {
   3.7198294710374985`*^9, 3.719829473153493*^9}, 3.7198319334279137`*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {}, {
       Directive[
        Opacity[1.], 
        AbsoluteThickness[1.6], 
        RGBColor[0, 0, 1]], 
       LineBox[CompressedData["
1:eJwdkmk41AsDxUeWUpNlRnLDvZY2RHZK+Z9cRVeLpdCmZL8qpUiEsTRJIpK1
GINkXyZ7QoSylMhellR2k3XQrbfn/XCe8/w+nA/nOUf6vIup3SoSiVT/W//3
x1smvhafIyLPrPWNdhjVZQRe9FrO1AXLU8tg3nwrsba9Nb448wi0LRYM81bp
E0OuCz9KSBaIW3H1y71vQVSucO+IyrSC0Fii9xOGHXHkZVD2LgUb5JGFG/7a
eIV4Thfc/5TkALGeR0NxrzwIeaOoPtGOf9FFNnRSHKcRsYKS125lXsJEDffU
sjSd4Blr5fXEFdDZYdJ+PCGEzqGHJioKV+Hk8V8Er2E44Zpj+Xhkgxvo4ekC
MwORRLqQxGgi6ToKXNsiMxtjiAHXfnWLcQ+sNfIv6uR7TIh9YNIEOjzRnmK1
KrSBQRzVsm96VXUTbS3714SpJxP0WDkx70wfCOl4FlbXpRKfvBdUNhnRIPbd
PEvmZjqxrNTV6QY/MNw1uzwkcgjRgVLvVg1/SExWkX89zSdUw+NlFRUCADU5
muKDZ8QRPe/XQVKB4GGdE3jUWkw4zVq5DG+4hSzha7/+dConAlOwAevooM25
xAdbVRKM4zLl8aTbcKQpPzzRW0085+OxXpy/jelJOU9NnVqis/gLn9l4EK4/
zJA60FpHzDjWZ+UM3EHq65KsmcTXhMCmdNO1HcGQ/nhS70l6EyHfGMyxa7yL
ezLRvI3st8SBmxcSqqtCcGBh170v5a2E96edYx6ZoXDcETnsn/aBiAkTvt/O
CIPQUnBNc1IncZKxtEnM6D6UX2Q7Rtp3E+4mvVVXEQ5lm6RmObGPRDYrgayg
8ABBpnU35u4MEeIeW1JiSdGgFX2TyIoZJ54ai1438IoGpMai01snCE251f/M
z0fDcSGQekJwijDtGZk2Ho/BD79yXplDbCJ4T5bOmo442GrcWNk3NUNwSGpt
7pkJiDlUVrU3iENIkQ3M3ZUTYXxBQWzMZIkw3Hiq260wEcc26BZQJJeJpqhq
l7KzDNDNal/SilcIiexRt1KnJCgVlA07Lv8kKrp3+Rd7J6NSr6ot6v0qmPbX
/K1VlYywd80G23W58XX4MG/xqhR41Wzma0jnhgDbOqjodgrekCad+fx4YMUX
HFoYnoq/ZmJljZT48FO1J46VmgYh9580c09+RGjbnlYbSYMu/3hT6iA/tupO
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
DgtxmAgmpyz+cuKAa1rD+eQKE/8D6mL+Rg==
        "]]}}}, {
    DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, False}, 
     AxesLabel -> {
       FormBox["\"n\"", TraditionalForm], 
       FormBox["\"t\"", TraditionalForm]}, AxesOrigin -> {0, 0}, 
     DisplayFunction :> Identity, Frame -> {{True, True}, {True, True}}, 
     FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> Automatic, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {Automatic, Automatic}, GridLinesStyle -> Directive[
       GrayLevel[0.4, 0.5], 
       AbsoluteThickness[1], 
       AbsoluteDashing[{1, 2}]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None}, 
     PlotRange -> {{0, 100000}, {0., 2429.6765992025616`}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"Insert Sort\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{"Directive", "[", 
               RowBox[{
                 RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                 RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 0, 1]"], Appearance -> None, BaseStyle -> {},
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                   ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                  False]}], "]"}], "}"}], ",", 
           RowBox[{"{", #, "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.7167128159135*^9, 3.7167128757469964`*^9, {3.7167129248189354`*^9, 
   3.71671292881151*^9}, {3.716714563280467*^9, 3.7167145773669434`*^9}, 
   3.7167146379649534`*^9, 3.716714694385979*^9, 3.716714758201618*^9, 
   3.716714875340027*^9, 3.716714906915137*^9, 3.7167152558578587`*^9, 
   3.7195948525276375`*^9, {3.7196010448742824`*^9, 3.7196010665136275`*^9}, 
   3.7196426840875797`*^9, 3.71965103072516*^9, 3.719676464515484*^9, {
   3.7198294718820944`*^9, 3.719829473473219*^9}, 3.71983193347945*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {}, {
       Directive[
        Opacity[1.], 
        AbsoluteThickness[1.6], 
        RGBColor[0, 0, 1]], 
       LineBox[CompressedData["
1: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
        "]]}}}, {
    DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, False}, 
     AxesLabel -> {
       FormBox["\"n\"", TraditionalForm], 
       FormBox["\"t\"", TraditionalForm]}, AxesOrigin -> {0, 0}, 
     DisplayFunction :> Identity, Frame -> {{True, True}, {True, True}}, 
     FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> Automatic, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {Automatic, Automatic}, GridLinesStyle -> Directive[
       GrayLevel[0.4, 0.5], 
       AbsoluteThickness[1], 
       AbsoluteDashing[{1, 2}]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None}, 
     PlotRange -> {{0, 100000}, {-8.001448214884038*^-6, 
       1.9365371838595937`}}, PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"Quick Sort\""}, "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{"Directive", "[", 
               RowBox[{
                 RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                 RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 0, 1]"], Appearance -> None, BaseStyle -> {},
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                   ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                  False]}], "]"}], "}"}], ",", 
           RowBox[{"{", #, "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.7167128159135*^9, 3.7167128757469964`*^9, {3.7167129248189354`*^9, 
   3.71671292881151*^9}, {3.716714563280467*^9, 3.7167145773669434`*^9}, 
   3.7167146379649534`*^9, 3.716714694385979*^9, 3.716714758201618*^9, 
   3.716714875340027*^9, 3.716714906915137*^9, 3.7167152558578587`*^9, 
   3.7195948525276375`*^9, {3.7196010448742824`*^9, 3.7196010665136275`*^9}, 
   3.7196426840875797`*^9, 3.71965103072516*^9, 3.719676464515484*^9, {
   3.7198294718820944`*^9, 3.719829473473219*^9}, 3.719831933533989*^9}]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{"\"\<Comp1.gif\>\"", ",", "Plot1", ",", 
    RowBox[{"ImageSize", "\[Rule]", "2048"}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{"\"\<Comp2.gif\>\"", ",", "Plot2", ",", 
    RowBox[{"ImageSize", "\[Rule]", "2048"}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{"\"\<Insert.gif\>\"", ",", "Plot3", ",", 
    RowBox[{"ImageSize", "\[Rule]", "2048"}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{"\"\<Quick.gif\>\"", ",", "Plot4", ",", 
    RowBox[{"ImageSize", "\[Rule]", "2048"}]}], "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.71664110869312*^9, 3.716641146244195*^9}, {
  3.7166412022296147`*^9, 3.716641205389699*^9}, {3.716641347274222*^9, 
  3.7166413580157037`*^9}, {3.7166414457407713`*^9, 3.716641500648283*^9}, {
  3.7166415725013237`*^9, 3.7166415924800997`*^9}, {3.716641782741521*^9, 
  3.716641783365637*^9}, {3.716712493848918*^9, 3.716712541256122*^9}, {
  3.716714795181678*^9, 3.7167147992854233`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"grid", " ", "=", " ", 
  RowBox[{"Grid", "[", 
   RowBox[{
    RowBox[{"Transpose", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Join", "[", 
        RowBox[{
         RowBox[{"{", "\"\<Number\>\"", "}"}], ",", 
         RowBox[{"quickSortResults", "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", "1"}], "]"}], "]"}]}], "]"}], ",", 
       RowBox[{"Join", "[", 
        RowBox[{
         RowBox[{"{", "\"\<Insert sort (sec.)\>\"", "}"}], ",", 
         RowBox[{"insertSortResults", "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", "2"}], "]"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"\"\<-\>\"", ",", "\"\<-\>\"", ",", "\"\<-\>\""}], "}"}]}], 
        "]"}], ",", 
       RowBox[{"Join", "[", 
        RowBox[{
         RowBox[{"{", "\"\<Quick sort (sec.)\>\"", "}"}], ",", 
         RowBox[{"quickSortResults", "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", "2"}], "]"}], "]"}]}], "]"}]}], "}"}], "]"}], 
    ",", 
    RowBox[{"Frame", "\[Rule]", "All"}], ",", 
    RowBox[{"Alignment", "\[Rule]", "Left"}], ",", 
    RowBox[{"Background", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"None", ",", 
       RowBox[{"{", "Yellow", "}"}]}], "}"}]}], ",", 
    RowBox[{"ItemStyle", "\[Rule]", 
     RowBox[{"Directive", "[", 
      RowBox[{
       RowBox[{"FontSize", "\[Rule]", "20"}], ",", "Bold"}], "]"}]}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.716713751390085*^9, 3.7167137514206266`*^9}, {
  3.7167138547988224`*^9, 3.716713858902309*^9}, {3.7167139538829703`*^9, 
  3.716713987760606*^9}, {3.7167140374458113`*^9, 3.71671405406323*^9}, {
  3.716714092876899*^9, 3.7167141043085494`*^9}, {3.7198319126721063`*^9, 
  3.7198319310003304`*^9}}],

Cell[BoxData[
 TagBox[GridBox[{
    {"\<\"Number\"\>", "\<\"Insert sort (sec.)\"\>", "\<\"Quick sort (sec.)\"\
\>"},
    {"5", "0.000023093232143433163`", "0.0000527845306135602`"},
    {"10", "0.00003922183871979401`", "0.00010630217970786227`"},
    {"50", "0.00040834699377434447`", "0.00036362676644896563`"},
    {"100", "0.0017305261737959876`", "0.0006942632012644778`"},
    {"500", "0.0441084399531978`", "0.004973842332607115`"},
    {"1000", "0.3585737473204519`", "0.011299921702946358`"},
    {"5000", "4.951220129087502`", "0.06077039022430508`"},
    {"10000", "18.186462087510886`", "0.14415418654639822`"},
    {"50000", "600.2779329137941`", "0.8654148424234336`"},
    {"100000", "2429.6766969493474`", "1.9365372321553878`"},
    {"500000", "\<\"-\"\>", "11.736419713262876`"},
    {"1000000", "\<\"-\"\>", "24.57908002428121`"},
    {"5000000", "\<\"-\"\>", "149.88658840382504`"}
   },
   AutoDelete->False,
   GridBoxAlignment->{"Columns" -> {{Left}}},
   GridBoxBackground->{"Columns" -> {{None}}, "Rows" -> {
       RGBColor[1, 1, 0]}},
   GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
   GridBoxItemStyle->{"Columns" -> {{
        Directive[FontSize -> 20, Bold]}}, "Rows" -> {{
        Directive[FontSize -> 20, Bold]}}}],
  "Grid"]], "Output",
 CellChangeTimes->{
  3.7167145668527822`*^9, 3.716714710201373*^9, 3.7167147625861807`*^9, 
   3.7167149105991693`*^9, 3.7167152594302654`*^9, 3.7195948558379655`*^9, {
   3.7196010483685856`*^9, 3.719601069842366*^9}, 3.719642688962165*^9, 
   3.7196510349356933`*^9, 3.7196764682765694`*^9, 3.719829477750239*^9, 
   3.7198319366917562`*^9}]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{"\"\<TableSort.gif\>\"", ",", "grid", ",", 
    RowBox[{"ImageSize", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"2048", ",", "720"}], "}"}]}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{"\"\<TableSort.xls\>\"", ",", "grid", ",", 
    RowBox[{"ImageSize", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"2048", ",", "720"}], "}"}]}]}], "]"}], 
  ";"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.7167141124319644`*^9, 3.7167141580770206`*^9}, {
   3.7167142286741667`*^9, 3.7167142875889273`*^9}, 3.716714849258524*^9, {
   3.7167150760023284`*^9, 3.716715087906725*^9}, {3.7167151787587595`*^9, 
   3.716715179553131*^9}, {3.7196010223316326`*^9, 3.7196010274265203`*^9}}]
},
WindowSize->{1366, 685},
WindowMargins->{{-8, Automatic}, {Automatic, -8}},
Magnification:>0.95 Inherited,
FrontEndVersion->"10.2 for Microsoft Windows (64-bit) (July 7, 2015)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 9732, 234, 774, "Input"],
Cell[10315, 258, 1061, 19, 19, "Message"],
Cell[11379, 279, 1073, 19, 19, "Message"],
Cell[12455, 300, 14865, 302, 234, "Output"],
Cell[27323, 604, 1075, 19, 21, "Message"],
Cell[28401, 625, 21680, 409, 235, "Output"],
Cell[50084, 1036, 1075, 19, 21, "Message"],
Cell[51162, 1057, 11478, 222, 221, "Output"],
Cell[62643, 1281, 12050, 230, 227, "Output"]
}, Open  ]],
Cell[74708, 1514, 1121, 25, 157, "Input"],
Cell[CellGroupData[{
Cell[75854, 1543, 1743, 44, 103, "Input"],
Cell[77600, 1589, 1704, 33, 300, "Output"]
}, Open  ]],
Cell[79319, 1625, 794, 18, 162, "Input"]
}
]
*)

(* End of internal cache information *)
