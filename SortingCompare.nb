(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.2' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[     93323,       1883]
NotebookOptionsPosition[     92462,       1853]
NotebookOutlinePosition[     92835,       1869]
CellTagsIndexPosition[     92792,       1866]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[BoxData[{
 RowBox[{
  RowBox[{"SetDirectory", "[", 
   RowBox[{"NotebookDirectory", "[", "]"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"workingDirectory", " ", "=", " ", 
   RowBox[{"CreateDirectory", "[", "\"\<shown results\>\"", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SetDirectory", "[", "workingDirectory", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"file", "=", " ", 
   RowBox[{"OpenRead", "[", "\"\<../log_sort.txt\>\"", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"workingDirectory", " ", "=", " ", 
   RowBox[{"CreateDirectory", "[", "\"\<sort\>\"", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SetDirectory", "[", "workingDirectory", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"filelist", "=", " ", 
   RowBox[{"ReadList", "[", 
    RowBox[{"file", ",", "String"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"quickSortResults", " ", "=", " ", 
   RowBox[{"filelist", "[", 
    RowBox[{"[", 
     RowBox[{"2", ";;", ";;", "3"}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"insertSortResults", " ", "=", " ", 
   RowBox[{"filelist", "[", 
    RowBox[{"[", 
     RowBox[{"1", ";;", ";;", "3"}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"insertSortResults", "=", " ", 
   RowBox[{
    RowBox[{"Map", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"StringSplit", "[", "#", "]"}], "[", 
           RowBox[{"[", "4", "]"}], "]"}], ",", 
          RowBox[{
           RowBox[{"StringSplit", "[", "#", "]"}], "[", 
           RowBox[{"[", "7", "]"}], "]"}]}], "}"}], ")"}], "&"}], ",", 
      "insertSortResults"}], "]"}], "[", 
    RowBox[{"[", 
     RowBox[{";;", 
      RowBox[{"-", "4"}]}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"quickSortResults", "=", " ", 
   RowBox[{"Map", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"StringSplit", "[", "#", "]"}], "[", 
          RowBox[{"[", "4", "]"}], "]"}], ",", 
         RowBox[{
          RowBox[{"StringSplit", "[", "#", "]"}], "[", 
          RowBox[{"[", "7", "]"}], "]"}]}], "}"}], ")"}], "&"}], ",", 
     "quickSortResults"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"insertSortResults", "=", " ", 
   RowBox[{"Map", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Read", "[", 
          RowBox[{
           RowBox[{"StringToStream", "[", 
            RowBox[{"#", "[", 
             RowBox[{"[", "1", "]"}], "]"}], "]"}], ",", "Number"}], "]"}], 
         ",", 
         RowBox[{"Read", "[", 
          RowBox[{
           RowBox[{"StringToStream", "[", 
            RowBox[{"#", "[", 
             RowBox[{"[", "2", "]"}], "]"}], "]"}], ",", "Number"}], "]"}]}], 
        "}"}], ")"}], "&"}], ",", "insertSortResults"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"quickSortResults", "=", " ", 
   RowBox[{"Map", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Read", "[", 
          RowBox[{
           RowBox[{"StringToStream", "[", 
            RowBox[{"#", "[", 
             RowBox[{"[", "1", "]"}], "]"}], "]"}], ",", "Number"}], "]"}], 
         ",", 
         RowBox[{"Read", "[", 
          RowBox[{
           RowBox[{"StringToStream", "[", 
            RowBox[{"#", "[", 
             RowBox[{"[", "2", "]"}], "]"}], "]"}], ",", "Number"}], "]"}]}], 
        "}"}], ")"}], "&"}], ",", "quickSortResults"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Plot1", " ", "=", " ", 
  RowBox[{"Show", "[", 
   RowBox[{
    RowBox[{"ListLogPlot", "[", 
     RowBox[{"insertSortResults", ",", 
      RowBox[{"Joined", "\[Rule]", "True"}], ",", 
      RowBox[{"PlotStyle", "\[Rule]", "Blue"}], ",", 
      RowBox[{"PlotLegends", "\[Rule]", 
       RowBox[{"{", "\"\<Insert Sort\>\"", "}"}]}], ",", 
      RowBox[{
      "PlotLabel", "\[Rule]", 
       "\"\<Compare quick sort and insert sort (Log scale)\>\""}], ",", " ", 
      RowBox[{"AxesLabel", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"\"\<n\>\"", ",", "\"\<t\>\""}], "}"}]}], ",", 
      RowBox[{"PlotTheme", "\[Rule]", "\"\<Detailed\>\""}]}], "]"}], ",", 
    RowBox[{"ListLogPlot", "[", 
     RowBox[{"quickSortResults", ",", 
      RowBox[{"Joined", "\[Rule]", "True"}], ",", 
      RowBox[{"PlotStyle", "\[Rule]", "Red"}], ",", 
      RowBox[{"PlotLegends", "\[Rule]", 
       RowBox[{"{", "\"\<Quick Sort\>\"", "}"}]}]}], "]"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"insertFunc", " ", "=", " ", 
   RowBox[{"Interpolation", "[", "insertSortResults", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"quickFunc", " ", "=", " ", 
   RowBox[{"Interpolation", "[", "quickSortResults", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Plot2", " ", "=", " ", 
  RowBox[{"LogPlot", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"insertFunc", "[", "x", "]"}], ",", 
      RowBox[{"quickFunc", "[", "x", "]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", "0", ",", 
      RowBox[{"10", "^", "5"}]}], "}"}], ",", 
    RowBox[{"PlotStyle", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"Blue", ",", "Red"}], "}"}]}], ",", 
    RowBox[{"PlotLegends", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"\"\<Insert Sort\>\"", ",", "\"\<Quick Sort\>\""}], "}"}]}], 
    ",", 
    RowBox[{
    "PlotLabel", "\[Rule]", 
     "\"\<Compare quick sort and insert sort (Log scale)\>\""}], ",", 
    RowBox[{"PlotTheme", "\[Rule]", "\"\<Detailed\>\""}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"Plot3", " ", "=", " ", 
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{"insertFunc", "[", "x", "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", "0", ",", 
      RowBox[{"10", "^", "5"}]}], "}"}], ",", 
    RowBox[{"PlotStyle", "\[Rule]", "Blue"}], ",", 
    RowBox[{"PlotLegends", "\[Rule]", 
     RowBox[{"{", "\"\<Insert Sort\>\"", "}"}]}], ",", 
    RowBox[{"AxesLabel", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"\"\<n\>\"", ",", "\"\<t\>\""}], "}"}]}], ",", 
    RowBox[{"PlotTheme", "\[Rule]", "\"\<Detailed\>\""}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"Plot4", " ", "=", " ", 
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{"quickFunc", "[", "x", "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", "0", ",", 
      RowBox[{"10", "^", "5"}]}], "}"}], ",", 
    RowBox[{"PlotStyle", "\[Rule]", "Blue"}], ",", 
    RowBox[{"PlotLegends", "\[Rule]", 
     RowBox[{"{", "\"\<Quick Sort\>\"", "}"}]}], ",", 
    RowBox[{"AxesLabel", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"\"\<n\>\"", ",", "\"\<t\>\""}], "}"}]}], ",", 
    RowBox[{"PlotTheme", "->", "\"\<Detailed\>\""}]}], 
   "]"}]}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.7166328489078903`*^9, 3.7166328519046392`*^9}, {
   3.7166328898347483`*^9, 3.7166329837*^9}, {3.7166333327978086`*^9, 
   3.71663344430938*^9}, {3.7166336235949707`*^9, 3.7166338793083553`*^9}, {
   3.716633930823107*^9, 3.716634129989297*^9}, {3.7166342836724577`*^9, 
   3.7166343394261303`*^9}, {3.7166344883692427`*^9, 
   3.7166345817832484`*^9}, {3.7166346120671644`*^9, 
   3.7166347025569077`*^9}, {3.7166347332104883`*^9, 3.716634758008203*^9}, {
   3.7166348057320786`*^9, 3.7166348866444254`*^9}, {3.716634934678432*^9, 
   3.716634950151271*^9}, {3.71663498447202*^9, 3.7166349940275564`*^9}, 
   3.716635906785164*^9, {3.716636077735529*^9, 3.716636293193735*^9}, {
   3.7166364065775924`*^9, 3.7166364078924465`*^9}, {3.716636437995269*^9, 
   3.716636450019704*^9}, {3.716636515873743*^9, 3.7166366509453373`*^9}, {
   3.716636681553017*^9, 3.7166366860059395`*^9}, {3.716636720243805*^9, 
   3.716636748869069*^9}, {3.7166369194524918`*^9, 3.7166369675112753`*^9}, {
   3.7166370306581407`*^9, 3.716637354908517*^9}, {3.7166377197330723`*^9, 
   3.7166380176722183`*^9}, {3.7166384508211837`*^9, 3.71663845744549*^9}, {
   3.716638505947996*^9, 3.7166387679333057`*^9}, {3.716638803632849*^9, 
   3.716638967416075*^9}, {3.7166390763614926`*^9, 3.7166391959590697`*^9}, {
   3.7166392388178177`*^9, 3.7166394545961475`*^9}, {3.7166395395713806`*^9, 
   3.716639659498789*^9}, {3.7166411022356586`*^9, 3.716641103250759*^9}, {
   3.716641711133936*^9, 3.71664172025766*^9}, 3.716641753683111*^9, {
   3.7166418141201677`*^9, 3.716641816476329*^9}, {3.7166418609206142`*^9, 
   3.7166418675560446`*^9}, {3.716711296988597*^9, 3.7167113173939104`*^9}, {
   3.7167113619186044`*^9, 3.7167114625600986`*^9}, {3.716711574748316*^9, 
   3.716711620907818*^9}, {3.7167117109591064`*^9, 3.7167117237280517`*^9}, 
   3.716711800389514*^9, {3.716712010856454*^9, 3.7167120510507917`*^9}, {
   3.7167120935955935`*^9, 3.716712200076744*^9}, {3.7167122366521745`*^9, 
   3.716712481875655*^9}, {3.7167127637502875`*^9, 3.7167128084013653`*^9}, {
   3.716712874651329*^9, 3.716712924392576*^9}, {3.716712972307913*^9, 
   3.7167129797804585`*^9}, {3.716713023254218*^9, 3.7167130241068463`*^9}, {
   3.7167144145532*^9, 3.716714448598859*^9}, {3.7167145660361986`*^9, 
   3.7167145677412815`*^9}, {3.716714606816677*^9, 3.7167146895122705`*^9}, {
   3.7167147775297885`*^9, 3.7167147781917534`*^9}, {3.716714810136058*^9, 
   3.7167148653152523`*^9}, {3.719593876147151*^9, 3.7195938788610754`*^9}, {
   3.7195948476813374`*^9, 3.7195948487839537`*^9}, {3.719600981108471*^9, 
   3.719600998745492*^9}, {3.71960106299724*^9, 3.719601064779143*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"CreateDirectory", "::", "filex"}], "MessageName"], 
  RowBox[{
  ":", " "}], \
"\<\"\[NoBreak]\\!\\(\\\"C:\\\\\\\\Users\\\\\\\\Petr\\\\\\\\Desktop\\\\\\\\\
Projects\\\\\\\\Programming Techniques\\\\\\\\shown results\\\\\\\\\\\"\\)\
\[NoBreak] already exists. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/CreateDirectory\\\", ButtonNote -> \
\\\"CreateDirectory::filex\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{
  3.71671280911168*^9, 3.7167128758761096`*^9, {3.716712925028591*^9, 
   3.716712928857549*^9}, {3.7167145563215847`*^9, 3.716714569312237*^9}, 
   3.716714638027997*^9, 3.7167146943829775`*^9, 3.71671475818911*^9, 
   3.71671487496727*^9, 3.716714906557728*^9, 3.7167152555111136`*^9, 
   3.7195948523607464`*^9, {3.719601044590096*^9, 3.7196010663455706`*^9}, 
   3.7196426832074575`*^9, 3.719651030196749*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"CreateDirectory", "::", "filex"}], "MessageName"], 
  RowBox[{
  ":", " "}], \
"\<\"\[NoBreak]\\!\\(\\\"C:\\\\\\\\Users\\\\\\\\Petr\\\\\\\\Desktop\\\\\\\\\
Projects\\\\\\\\Programming Techniques\\\\\\\\shown results\\\\\\\\sort\\\\\\\
\\\\\"\\)\[NoBreak] already exists. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\
\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/CreateDirectory\\\", ButtonNote -> \
\\\"CreateDirectory::filex\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{
  3.71671280911168*^9, 3.7167128758761096`*^9, {3.716712925028591*^9, 
   3.716712928857549*^9}, {3.7167145563215847`*^9, 3.716714569312237*^9}, 
   3.716714638027997*^9, 3.7167146943829775`*^9, 3.71671475818911*^9, 
   3.71671487496727*^9, 3.716714906557728*^9, 3.7167152555111136`*^9, 
   3.7195948523607464`*^9, {3.719601044590096*^9, 3.7196010663455706`*^9}, 
   3.7196426832074575`*^9, 3.7196510302888136`*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {{{}, {}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[0.012833333333333334`], 
          AbsoluteThickness[1.6], 
          RGBColor[0, 0, 1]], 
         LineBox[{{5., -10.570604950105997`}, {10., -10.0150791474217}, {
          50., -7.083666839655669}, {100., -6.010282709054735}, {
          500., -2.8264559432528227`}, {1000., -1.0772211045052245`}, {5000., 
          2.6614006832092723`}, {10000., 3.495998889465837}, {50000., 
          6.698979279321627}, {100000., 
          8.177608670363885}}]}}}, {}}, {{}, {{{}, {}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[0.012833333333333334`], 
          AbsoluteThickness[1.6], 
          RGBColor[1, 0, 0]], 
         LineBox[{{5., -9.936298269568997}, {10., -9.235603883373637}, {
          50., -7.59434678638735}, {100., -6.92366418521235}, {
          500., -4.798985827687507}, {1000., -4.198675692936534}, {
          5000., -1.9260946346984247`}, {10000., -1.53544824183159}, {50000., 
          0.20478427106650698`}, {100000., 1.0624047736902074`}, {500000., 
          3.1654221211724853`}, {1.*^6, 3.9730489381837253`}, {5.*^6, 
          5.658027154772339}}]}}}, {}}}, {
    DisplayFunction -> Identity, GridLines -> {Automatic, 
       Charting`ScaledTickValues[{Log, Exp}]}, DisplayFunction -> Identity, 
     DisplayFunction -> Identity, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, AxesOrigin -> {0, -11.931362390301393`}, 
     PlotRange -> {{0, 100000.}, {-11.612172373465436`, 8.177608670363885}}, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, False}, 
     AxesLabel -> {
       FormBox["\"n\"", TraditionalForm], 
       FormBox["\"t\"", TraditionalForm]}, 
     AxesOrigin -> {0, -11.931362390301393`}, 
     CoordinatesToolOptions -> {"DisplayFunction" -> ({
         Part[#, 1], 
         Exp[
          Part[#, 2]]}& ), "CopiedValueFunction" -> ({
         Part[#, 1], 
         Exp[
          Part[#, 2]]}& )}, DisplayFunction :> Identity, 
     Frame -> {{True, True}, {True, True}}, 
     FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> Automatic, 
     FrameTicks -> {{
        Charting`ScaledTicks[{Log, Exp}], 
        Charting`ScaledFrameTicks[{Log, Exp}]}, {Automatic, Automatic}}, 
     GridLines -> {Automatic, 
       Charting`ScaledTickValues[{Log, Exp}]}, GridLinesStyle -> Directive[
       GrayLevel[0.4, 0.5], 
       AbsoluteThickness[1], 
       AbsoluteDashing[{1, 2}]], Method -> {}, PlotLabel -> 
     FormBox["\"Compare quick sort and insert sort (Log scale)\"", 
       TraditionalForm], 
     PlotRange -> {{0, 100000.}, {-11.612172373465436`, 8.177608670363885}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {Automatic, 
       Charting`ScaledTicks[{Log, Exp}]}}],FormBox[
    TagBox[
     GridBox[{{
        FormBox[
         TemplateBox[{"\"Insert Sort\""}, "PointLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.231], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.231], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"PointLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.012833333333333334`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 0, 1]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "True", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"Quick Sort\""}, "PointLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.231], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.231], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"PointLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.012833333333333334`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "True", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}}, 
      GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      GridBoxSpacings -> {"Columns" -> {{0}}}], "Grid"], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.7167128159135*^9, 3.7167128757469964`*^9, {3.7167129248189354`*^9, 
   3.71671292881151*^9}, {3.716714563280467*^9, 3.7167145773669434`*^9}, 
   3.7167146379649534`*^9, 3.716714694385979*^9, 3.716714758201618*^9, 
   3.716714875340027*^9, 3.716714906915137*^9, 3.7167152558578587`*^9, 
   3.7195948525276375`*^9, {3.7196010448742824`*^9, 3.7196010665136275`*^9}, 
   3.7196426840875797`*^9, 3.71965103072516*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"InterpolatingFunction", "::", "dmval"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Input value \[NoBreak]\\!\\({2.0428571428571427`}\\)\
\[NoBreak] lies outside the range of data in the interpolating function. \
Extrapolation will be used. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/InterpolatingFunction/dmval\\\", \
ButtonNote -> \\\"InterpolatingFunction::dmval\\\"]\\)\"\>"}]], "Message", \
"MSG",
 CellChangeTimes->{
  3.71671280911168*^9, 3.7167128758761096`*^9, {3.716712925028591*^9, 
   3.716712928857549*^9}, {3.7167145563215847`*^9, 3.716714569312237*^9}, 
   3.716714638027997*^9, 3.7167146943829775`*^9, 3.71671475818911*^9, 
   3.71671487496727*^9, 3.716714906557728*^9, 3.7167152555111136`*^9, 
   3.7195948523607464`*^9, {3.719601044590096*^9, 3.7196010663455706`*^9}, 
   3.7196426832074575`*^9, 3.719651030777196*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {}, {
       Directive[
        Opacity[1.], 
        AbsoluteThickness[1.6], 
        RGBColor[0, 0, 1]], 
       LineBox[CompressedData["
1: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
QVMr/h9Uj/8S
        "]]}, {
       Directive[
        Opacity[1.], 
        AbsoluteThickness[1.6], 
        RGBColor[1, 0, 0]], 
       LineBox[CompressedData["
1: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
5aXHgmUkqxlePJA2TIFr6qmpl8l+Mp9lP7X7R4FvVCUlPrLfDVSBMRGuajjc
dskZkRwv56hNEa0G3bJW1/ukXyBry/TOA9WgtLHhkSTpL0HmLd0Bg2qAzrRH
yyQP6Te8eWZZDQ0ofMsI6ccHXf7HF7yrgac/ub6T9G/Z8shXVFQNd4YUdh8i
/R+ji7HcGqohO7A62mU3OW9PXp6TH6iG23MaGonkvHBKn1gbylYD5lvWLAM5
X/o6qbanj9ZAwdyF0HFyPkXD1uVznq2BvbKfP7v8R6CxVluhnCs1wBMS8n1R
i/TDVRF8S3ANsL98qbeHnO/qR95bRyg1ELRo9E2EzIfXza23YrtrIO7JNfqo
AdlfCdU6w4kacM1xbi4hz1e8Pwa8f/LVwqTDmf0xxmR/GnW7bhvXQrZ1xcPv
5wjUKCIQzdtWCyNSqj0xDgQqH/mw4DpcC4mPP9Bnnch8y9K0ap0nf3+DN+vM
dQJ9NLOSjROpAw9XA6W97gTyev45RdW8DuYC2aqtyTzdKqJVZ0Ktg9T3lhF6
UQQSHmnYlTVRB915di+3PyfzKety9OblOgj5nVIj9JJA9LMhVr+21IPH550h
zLfk+jEtNI+L9SCtHOZ94DuBnDc5ro0drAf79y/VtpPnT5vhZYdlej0ErAxM
hFSR854ZUXdpTQMc1PpiRK8hkPbZzGilbQ1w9PWX0U7y/Cocw5LNt2sAyrV3
wWsGCZS38YV232gDiHo0B+asEoh7Y9ltuelGGJXjTvLSXkTeoYkt11ca4S6n
OIeHziJaYFWJ9q5tgsg7Ggqe+ovIweunm6JIE7QsGCQ/Nl5EJ+18thdoNMHv
uzGblqwXkchhkejhm03wVH2rx7D/IvpCN3DaP9kEp0Y/GOZSFlG1eap430Az
/J1sONlybQlp7Ve8vJ3WDF5Tixk+Lkvop2hcohu9GeqvD9Qrk+f9mPaQQ1xr
WmCi5zo9+t4Ssj5z6cKubS1Abw6rfRezhP4Yb3gfcKUFGOKCAUHkfUFC32W7
4ngLKPPFDhnILyNnTaV9N/60Qvli2PPlmWWUM7hJGx9qh8u+46/W3lpFS+dM
H50bbwc5O7ORnrvkfaj+ScsUvR1e1jYNp/itovI8LvvNbB1ABF4tNAlbRS1R
xFN3qQ6g6F+he3xcRTO6vUPy5zvg3ofKA3uaVpFCYkJQaFsHmNWJX1unzEQO
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
UZFJ6sv/icFyJGATm7pMHIuO/Q+b8mxy
        "]]}}}, {Ticks -> {Automatic, 
       Charting`ScaledTicks[{Log, Exp}]}, GridLines -> {Automatic, 
       Charting`ScaledTickValues[{Log, Exp}]}, FrameTicks -> {{
        Charting`ScaledTicks[{Log, Exp}], 
        Charting`ScaledFrameTicks[{Log, Exp}]}, {Automatic, Automatic}}, 
     AxesOrigin -> {0, -12.089023397894618`}, 
     PlotRange -> {{0, 100000}, {-12.089023397894618`, 9.142686341761289}}, 
     DisplayFunction -> Identity, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None}, DisplayFunction -> 
     Identity, DisplayFunction -> Identity, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "ClippingRange" -> {{{0.002040816326530612, 
        99999.99795918367}, {-11.123945682455712`, 8.177608626322384}}, {{
        0.002040816326530612, 99999.99795918367}, {-11.123945682455712`, 
        8.177608626322384}}}}, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, False}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
     CoordinatesToolOptions -> {"DisplayFunction" -> ({
         Part[#, 1], 
         Exp[
          Part[#, 2]]}& ), "CopiedValueFunction" -> ({
         Part[#, 1], 
         Exp[
          Part[#, 2]]}& )}, DisplayFunction :> Identity, 
     Frame -> {{True, True}, {True, True}}, 
     FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> Automatic, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {Automatic, Automatic}, GridLinesStyle -> Directive[
       GrayLevel[0.4, 0.5], 
       AbsoluteThickness[1], 
       AbsoluteDashing[{1, 2}]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None}, PlotLabel -> 
     FormBox["\"Compare quick sort and insert sort (Log scale)\"", 
       TraditionalForm], 
     PlotRange -> {{0, 100000}, {-11.123945682455712`, 8.177608626322384}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"Insert Sort\"", "\"Quick Sort\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 0, 1]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.7167128159135*^9, 3.7167128757469964`*^9, {3.7167129248189354`*^9, 
   3.71671292881151*^9}, {3.716714563280467*^9, 3.7167145773669434`*^9}, 
   3.7167146379649534`*^9, 3.716714694385979*^9, 3.716714758201618*^9, 
   3.716714875340027*^9, 3.716714906915137*^9, 3.7167152558578587`*^9, 
   3.7195948525276375`*^9, {3.7196010448742824`*^9, 3.7196010665136275`*^9}, 
   3.7196426840875797`*^9, 3.719651030941813*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"InterpolatingFunction", "::", "dmval"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Input value \[NoBreak]\\!\\({2.0428571428571427`}\\)\
\[NoBreak] lies outside the range of data in the interpolating function. \
Extrapolation will be used. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/InterpolatingFunction/dmval\\\", \
ButtonNote -> \\\"InterpolatingFunction::dmval\\\"]\\)\"\>"}]], "Message", \
"MSG",
 CellChangeTimes->{
  3.71671280911168*^9, 3.7167128758761096`*^9, {3.716712925028591*^9, 
   3.716712928857549*^9}, {3.7167145563215847`*^9, 3.716714569312237*^9}, 
   3.716714638027997*^9, 3.7167146943829775`*^9, 3.71671475818911*^9, 
   3.71671487496727*^9, 3.716714906557728*^9, 3.7167152555111136`*^9, 
   3.7195948523607464`*^9, {3.719601044590096*^9, 3.7196010663455706`*^9}, 
   3.7196426832074575`*^9, 3.7196510309823413`*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {}, {
       Directive[
        Opacity[1.], 
        AbsoluteThickness[1.6], 
        RGBColor[0, 0, 1]], 
       LineBox[CompressedData["
1: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
lctto+B/BlQnXQ==
        "]]}}}, {
    DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, False}, 
     AxesLabel -> {
       FormBox["\"n\"", TraditionalForm], 
       FormBox["\"t\"", TraditionalForm]}, AxesOrigin -> {0, 0}, 
     DisplayFunction :> Identity, Frame -> {{True, True}, {True, True}}, 
     FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> Automatic, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {Automatic, Automatic}, GridLinesStyle -> Directive[
       GrayLevel[0.4, 0.5], 
       AbsoluteThickness[1], 
       AbsoluteDashing[{1, 2}]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None}, 
     PlotRange -> {{0, 100000}, {0., 3560.330392146023}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"Insert Sort\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{"Directive", "[", 
               RowBox[{
                 RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                 RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 0, 1]"], Appearance -> None, BaseStyle -> {},
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                   ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                  False]}], "]"}], "}"}], ",", 
           RowBox[{"{", #, "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.7167128159135*^9, 3.7167128757469964`*^9, {3.7167129248189354`*^9, 
   3.71671292881151*^9}, {3.716714563280467*^9, 3.7167145773669434`*^9}, 
   3.7167146379649534`*^9, 3.716714694385979*^9, 3.716714758201618*^9, 
   3.716714875340027*^9, 3.716714906915137*^9, 3.7167152558578587`*^9, 
   3.7195948525276375`*^9, {3.7196010448742824`*^9, 3.7196010665136275`*^9}, 
   3.7196426840875797`*^9, 3.719651031065401*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {}, {
       Directive[
        Opacity[1.], 
        AbsoluteThickness[1.6], 
        RGBColor[0, 0, 1]], 
       LineBox[CompressedData["
1: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
/g/96FRr
        "]]}}}, {
    DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, False}, 
     AxesLabel -> {
       FormBox["\"n\"", TraditionalForm], 
       FormBox["\"t\"", TraditionalForm]}, AxesOrigin -> {0, 0}, 
     DisplayFunction :> Identity, Frame -> {{True, True}, {True, True}}, 
     FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> Automatic, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {Automatic, Automatic}, GridLinesStyle -> Directive[
       GrayLevel[0.4, 0.5], 
       AbsoluteThickness[1], 
       AbsoluteDashing[{1, 2}]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None}, 
     PlotRange -> {{0, 100000}, {-1.5762351713880462`*^-8, 
       2.893320349532315}}, PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"Quick Sort\""}, "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{"Directive", "[", 
               RowBox[{
                 RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                 RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 0, 1]"], Appearance -> None, BaseStyle -> {},
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                   ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                  False]}], "]"}], "}"}], ",", 
           RowBox[{"{", #, "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.7167128159135*^9, 3.7167128757469964`*^9, {3.7167129248189354`*^9, 
   3.71671292881151*^9}, {3.716714563280467*^9, 3.7167145773669434`*^9}, 
   3.7167146379649534`*^9, 3.716714694385979*^9, 3.716714758201618*^9, 
   3.716714875340027*^9, 3.716714906915137*^9, 3.7167152558578587`*^9, 
   3.7195948525276375`*^9, {3.7196010448742824`*^9, 3.7196010665136275`*^9}, 
   3.7196426840875797`*^9, 3.71965103116297*^9}]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{"\"\<Comp1.gif\>\"", ",", "Plot1", ",", 
    RowBox[{"ImageSize", "\[Rule]", "2048"}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{"\"\<Comp2.gif\>\"", ",", "Plot2", ",", 
    RowBox[{"ImageSize", "\[Rule]", "2048"}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{"\"\<Insert.gif\>\"", ",", "Plot3", ",", 
    RowBox[{"ImageSize", "\[Rule]", "2048"}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{"\"\<Quick.gif\>\"", ",", "Plot4", ",", 
    RowBox[{"ImageSize", "\[Rule]", "2048"}]}], "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.71664110869312*^9, 3.716641146244195*^9}, {
  3.7166412022296147`*^9, 3.716641205389699*^9}, {3.716641347274222*^9, 
  3.7166413580157037`*^9}, {3.7166414457407713`*^9, 3.716641500648283*^9}, {
  3.7166415725013237`*^9, 3.7166415924800997`*^9}, {3.716641782741521*^9, 
  3.716641783365637*^9}, {3.716712493848918*^9, 3.716712541256122*^9}, {
  3.716714795181678*^9, 3.7167147992854233`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"grid", " ", "=", " ", 
  RowBox[{"Grid", "[", 
   RowBox[{
    RowBox[{"Transpose", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Join", "[", 
        RowBox[{
         RowBox[{"{", "\"\<Time\>\"", "}"}], ",", 
         RowBox[{"quickSortResults", "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", "1"}], "]"}], "]"}]}], "]"}], ",", 
       RowBox[{"Join", "[", 
        RowBox[{
         RowBox[{"{", "\"\<Insert sort\>\"", "}"}], ",", 
         RowBox[{"insertSortResults", "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", "2"}], "]"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"\"\<-\>\"", ",", "\"\<-\>\"", ",", "\"\<-\>\""}], "}"}]}], 
        "]"}], ",", 
       RowBox[{"Join", "[", 
        RowBox[{
         RowBox[{"{", "\"\<Quick sort\>\"", "}"}], ",", 
         RowBox[{"quickSortResults", "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", "2"}], "]"}], "]"}]}], "]"}]}], "}"}], "]"}], 
    ",", 
    RowBox[{"Frame", "\[Rule]", "All"}], ",", 
    RowBox[{"Alignment", "\[Rule]", "Left"}], ",", 
    RowBox[{"Background", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"None", ",", 
       RowBox[{"{", "Yellow", "}"}]}], "}"}]}], ",", 
    RowBox[{"ItemStyle", "\[Rule]", 
     RowBox[{"Directive", "[", 
      RowBox[{
       RowBox[{"FontSize", "\[Rule]", "20"}], ",", "Bold"}], "]"}]}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.716713751390085*^9, 3.7167137514206266`*^9}, {
  3.7167138547988224`*^9, 3.716713858902309*^9}, {3.7167139538829703`*^9, 
  3.716713987760606*^9}, {3.7167140374458113`*^9, 3.71671405406323*^9}, {
  3.716714092876899*^9, 3.7167141043085494`*^9}}],

Cell[BoxData[
 TagBox[GridBox[{
    {"\<\"Time\"\>", "\<\"Insert sort\"\>", "\<\"Quick sort\"\>"},
    {"5", "0.000025659287910773126`", "0.000048386085774600185`"},
    {"10", "0.00004472047321593675`", "0.00009750529406094`"},
    {"50", "0.0008386921534264125`", "0.0005032886043070395`"},
    {"100", "0.0024533944855257284`", "0.0009842169720061245`"},
    {"500", "0.05922236962057614`", "0.00823809766438166`"},
    {"1000", "0.34054053855912847`", "0.015015448724128744`"},
    {"5000", "14.316327701364012`", "0.14571616355523176`"},
    {"10000", "32.98321809258385`", "0.2153591365576304`"},
    {"50000", "811.5770088095214`", "1.227260280851901`"},
    {"100000", "3560.330548948323`", "2.8933204108271866`"},
    {"500000", "\<\"-\"\>", "23.69874566403857`"},
    {"1000000", "\<\"-\"\>", "53.14632392211746`"},
    {"5000000", "\<\"-\"\>", "286.58270116790084`"}
   },
   AutoDelete->False,
   GridBoxAlignment->{"Columns" -> {{Left}}},
   GridBoxBackground->{"Columns" -> {{None}}, "Rows" -> {
       RGBColor[1, 1, 0]}},
   GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
   GridBoxItemStyle->{"Columns" -> {{
        Directive[FontSize -> 20, Bold]}}, "Rows" -> {{
        Directive[FontSize -> 20, Bold]}}}],
  "Grid"]], "Output",
 CellChangeTimes->{
  3.7167145668527822`*^9, 3.716714710201373*^9, 3.7167147625861807`*^9, 
   3.7167149105991693`*^9, 3.7167152594302654`*^9, 3.7195948558379655`*^9, {
   3.7196010483685856`*^9, 3.719601069842366*^9}, 3.719642688962165*^9, 
   3.7196510349356933`*^9}]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{"\"\<TableSort.gif\>\"", ",", "grid", ",", 
    RowBox[{"ImageSize", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"2048", ",", "720"}], "}"}]}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{"\"\<TableSort.xls\>\"", ",", "grid", ",", 
    RowBox[{"ImageSize", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"2048", ",", "720"}], "}"}]}]}], "]"}], 
  ";"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.7167141124319644`*^9, 3.7167141580770206`*^9}, {
   3.7167142286741667`*^9, 3.7167142875889273`*^9}, 3.716714849258524*^9, {
   3.7167150760023284`*^9, 3.716715087906725*^9}, {3.7167151787587595`*^9, 
   3.716715179553131*^9}, {3.7196010223316326`*^9, 3.7196010274265203`*^9}}]
},
WindowSize->{1366, 685},
WindowMargins->{{-8, Automatic}, {Automatic, -8}},
Magnification:>0.95 Inherited,
FrontEndVersion->"10.2 for Microsoft Windows (64-bit) (July 7, 2015)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 9670, 233, 774, "Input"],
Cell[10253, 257, 961, 18, 19, "Message"],
Cell[11217, 277, 975, 18, 19, "Message"],
Cell[12195, 297, 14769, 301, 241, "Output"],
Cell[26967, 600, 975, 18, 21, "Message"],
Cell[27945, 620, 27491, 505, 234, "Output"],
Cell[55439, 1127, 977, 18, 21, "Message"],
Cell[56419, 1147, 11484, 223, 219, "Output"],
Cell[67906, 1372, 19299, 350, 228, "Output"]
}, Open  ]],
Cell[87220, 1725, 1121, 25, 157, "Input"],
Cell[CellGroupData[{
Cell[88366, 1754, 1674, 43, 103, "Input"],
Cell[90043, 1799, 1606, 31, 298, "Output"]
}, Open  ]],
Cell[91664, 1833, 794, 18, 162, "Input"]
}
]
*)

(* End of internal cache information *)
