(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.2' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    113961,       2305]
NotebookOptionsPosition[    113133,       2276]
NotebookOutlinePosition[    113504,       2292]
CellTagsIndexPosition[    113461,       2289]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[BoxData[{
 RowBox[{
  RowBox[{"SetDirectory", "[", 
   RowBox[{"NotebookDirectory", "[", "]"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"workingDirectory", " ", "=", " ", 
   RowBox[{"CreateDirectory", "[", "\"\<shown results\>\"", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SetDirectory", "[", "workingDirectory", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"file", "=", " ", 
   RowBox[{"OpenRead", "[", "\"\<../log_search.txt\>\"", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"workingDirectory", " ", "=", " ", 
   RowBox[{"CreateDirectory", "[", "\"\<search\>\"", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SetDirectory", "[", "workingDirectory", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"filelist", "=", " ", 
    RowBox[{"ReadList", "[", 
     RowBox[{"file", ",", "String"}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"mapSearchResults", " ", "=", " ", 
   RowBox[{"filelist", "[", 
    RowBox[{"[", 
     RowBox[{"3", ";;", ";;", "4"}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"binarySearchResults", " ", "=", " ", 
   RowBox[{"filelist", "[", 
    RowBox[{"[", 
     RowBox[{"2", ";;", ";;", "4"}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"linearSearchResults", " ", "=", " ", 
   RowBox[{"filelist", "[", 
    RowBox[{"[", 
     RowBox[{"1", ";;", ";;", "4"}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"linearSearchResults", "=", " ", 
   RowBox[{"Map", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"StringSplit", "[", "#", "]"}], "[", 
          RowBox[{"[", "4", "]"}], "]"}], ",", 
         RowBox[{
          RowBox[{"StringSplit", "[", "#", "]"}], "[", 
          RowBox[{"[", "7", "]"}], "]"}]}], "}"}], ")"}], "&"}], ",", 
     "linearSearchResults"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"binarySearchResults", "=", " ", 
   RowBox[{"Map", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"StringSplit", "[", "#", "]"}], "[", 
          RowBox[{"[", "4", "]"}], "]"}], ",", 
         RowBox[{
          RowBox[{"StringSplit", "[", "#", "]"}], "[", 
          RowBox[{"[", "7", "]"}], "]"}]}], "}"}], ")"}], "&"}], ",", 
     "binarySearchResults"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"mapSearchResults", "=", " ", 
   RowBox[{"Map", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"StringSplit", "[", "#", "]"}], "[", 
          RowBox[{"[", "4", "]"}], "]"}], ",", 
         RowBox[{
          RowBox[{"StringSplit", "[", "#", "]"}], "[", 
          RowBox[{"[", "7", "]"}], "]"}]}], "}"}], ")"}], "&"}], ",", 
     "mapSearchResults"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"linearSearchResults", "=", " ", 
   RowBox[{"Map", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Read", "[", 
          RowBox[{
           RowBox[{"StringToStream", "[", 
            RowBox[{"#", "[", 
             RowBox[{"[", "1", "]"}], "]"}], "]"}], ",", "Number"}], "]"}], 
         ",", 
         RowBox[{"Read", "[", 
          RowBox[{
           RowBox[{"StringToStream", "[", 
            RowBox[{"#", "[", 
             RowBox[{"[", "2", "]"}], "]"}], "]"}], ",", "Number"}], "]"}]}], 
        "}"}], ")"}], "&"}], ",", "linearSearchResults"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"binarySearchResults", "=", " ", 
   RowBox[{"Map", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Read", "[", 
          RowBox[{
           RowBox[{"StringToStream", "[", 
            RowBox[{"#", "[", 
             RowBox[{"[", "1", "]"}], "]"}], "]"}], ",", "Number"}], "]"}], 
         ",", 
         RowBox[{"Read", "[", 
          RowBox[{
           RowBox[{"StringToStream", "[", 
            RowBox[{"#", "[", 
             RowBox[{"[", "2", "]"}], "]"}], "]"}], ",", "Number"}], "]"}]}], 
        "}"}], ")"}], "&"}], ",", "binarySearchResults"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"mapSearchResults", "=", " ", 
   RowBox[{"Map", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Read", "[", 
          RowBox[{
           RowBox[{"StringToStream", "[", 
            RowBox[{"#", "[", 
             RowBox[{"[", "1", "]"}], "]"}], "]"}], ",", "Number"}], "]"}], 
         ",", 
         RowBox[{"Read", "[", 
          RowBox[{
           RowBox[{"StringToStream", "[", 
            RowBox[{"#", "[", 
             RowBox[{"[", "2", "]"}], "]"}], "]"}], ",", "Number"}], "]"}]}], 
        "}"}], ")"}], "&"}], ",", "mapSearchResults"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Plot1", " ", "=", " ", 
  RowBox[{"Show", "[", 
   RowBox[{
    RowBox[{"ListPlot", "[", 
     RowBox[{"linearSearchResults", ",", 
      RowBox[{"Joined", "\[Rule]", "True"}], ",", 
      RowBox[{"PlotStyle", "\[Rule]", "Blue"}], ",", 
      RowBox[{"PlotLegends", "\[Rule]", 
       RowBox[{"{", "\"\<Linear Search\>\"", "}"}]}], ",", 
      RowBox[{
      "PlotLabel", "\[Rule]", 
       "\"\<Compare binary Search, linear search and search using search by \
key\>\""}], ",", " ", 
      RowBox[{"AxesLabel", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"\"\<n\>\"", ",", "\"\<t\>\""}], "}"}]}], ",", 
      RowBox[{"PlotTheme", "\[Rule]", "\"\<Detailed\>\""}], ",", 
      RowBox[{"ImageSize", "\[Rule]", 
       RowBox[{"Scaled", "[", "0.8", "]"}]}]}], "]"}], ",", 
    RowBox[{"ListPlot", "[", 
     RowBox[{"binarySearchResults", ",", 
      RowBox[{"Joined", "\[Rule]", "True"}], ",", 
      RowBox[{"PlotStyle", "\[Rule]", "Red"}], ",", 
      RowBox[{"PlotLegends", "\[Rule]", 
       RowBox[{"{", "\"\<Binary Search\>\"", "}"}]}]}], "]"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"ListPlot", "[", 
     RowBox[{"mapSearchResults", ",", 
      RowBox[{"Joined", "\[Rule]", "True"}], ",", 
      RowBox[{"PlotStyle", "\[Rule]", "Green"}], ",", 
      RowBox[{"PlotLegends", "\[Rule]", 
       RowBox[{"{", "\"\<Search by Key\>\"", "}"}]}]}], "]"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"linearFunc", " ", "=", " ", 
   RowBox[{"Interpolation", "[", "linearSearchResults", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"binaryFunc", " ", "=", " ", 
   RowBox[{"Interpolation", "[", "binarySearchResults", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"mapFunc", " ", "=", " ", 
   RowBox[{"Interpolation", "[", "mapSearchResults", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Plot2", " ", "=", " ", 
  RowBox[{"LogPlot", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"linearFunc", "[", "x", "]"}], ",", 
      RowBox[{"binaryFunc", "[", "x", "]"}], ",", " ", 
      RowBox[{"mapFunc", "[", "x", "]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", "0", ",", 
      RowBox[{"10", "^", "5"}]}], "}"}], ",", 
    RowBox[{"PlotStyle", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"Blue", ",", "Red", ",", " ", "Green"}], "}"}]}], ",", 
    RowBox[{"PlotLegends", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
      "\"\<Linear Search\>\"", ",", "\"\<Binary Search\>\"", ",", 
       "\"\<Search by Key\>\""}], "}"}]}], ",", 
    RowBox[{
    "PlotLabel", "\[Rule]", 
     "\"\<Compare binary Search, linear search and search using search by key \
(Log scale)\>\""}], ",", 
    RowBox[{"PlotTheme", "\[Rule]", "\"\<Detailed\>\""}], ",", 
    RowBox[{"ImageSize", "\[Rule]", 
     RowBox[{"Scaled", "[", "0.8", "]"}]}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"Plot3", " ", "=", " ", 
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{"linearFunc", "[", "x", "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", "0", ",", 
      RowBox[{"10", "^", "5"}]}], "}"}], ",", 
    RowBox[{"PlotStyle", "\[Rule]", "Blue"}], ",", 
    RowBox[{"PlotLegends", "\[Rule]", 
     RowBox[{"{", "\"\<Linear Search\>\"", "}"}]}], ",", 
    RowBox[{"AxesLabel", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"\"\<n\>\"", ",", "\"\<t\>\""}], "}"}]}], ",", 
    RowBox[{"PlotTheme", "\[Rule]", "\"\<Detailed\>\""}], ",", 
    RowBox[{"ImageSize", "\[Rule]", 
     RowBox[{"Scaled", "[", "0.8", "]"}]}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"Plot4", " ", "=", " ", 
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{"binaryFunc", "[", "x", "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", "0", ",", 
      RowBox[{"10", "^", "5"}]}], "}"}], ",", 
    RowBox[{"PlotStyle", "\[Rule]", "Blue"}], ",", 
    RowBox[{"PlotLegends", "\[Rule]", 
     RowBox[{"{", "\"\<Binary Search\>\"", "}"}]}], ",", 
    RowBox[{"AxesLabel", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"\"\<n\>\"", ",", "\"\<t\>\""}], "}"}]}], ",", 
    RowBox[{"PlotTheme", "->", "\"\<Detailed\>\""}], ",", 
    RowBox[{"ImageSize", "\[Rule]", 
     RowBox[{"Scaled", "[", "0.8", "]"}]}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"Plot5", " ", "=", " ", 
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{"mapFunc", "[", "x", "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", "0", ",", 
      RowBox[{"10", "^", "5"}]}], "}"}], ",", 
    RowBox[{"PlotStyle", "\[Rule]", "Blue"}], ",", 
    RowBox[{"PlotLegends", "\[Rule]", 
     RowBox[{"{", "\"\<Search by Key\>\"", "}"}]}], ",", 
    RowBox[{"AxesLabel", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"\"\<n\>\"", ",", "\"\<t\>\""}], "}"}]}], ",", 
    RowBox[{"PlotTheme", "->", "\"\<Detailed\>\""}], ",", 
    RowBox[{"ImageSize", "\[Rule]", 
     RowBox[{"Scaled", "[", "0.8", "]"}]}]}], 
   "]"}]}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.7166328489078903`*^9, 3.7166328519046392`*^9}, {
   3.7166328898347483`*^9, 3.7166329837*^9}, {3.7166333327978086`*^9, 
   3.71663344430938*^9}, {3.7166336235949707`*^9, 3.7166338793083553`*^9}, {
   3.716633930823107*^9, 3.716634129989297*^9}, {3.7166342836724577`*^9, 
   3.7166343394261303`*^9}, {3.7166344883692427`*^9, 
   3.7166345817832484`*^9}, {3.7166346120671644`*^9, 
   3.7166347025569077`*^9}, {3.7166347332104883`*^9, 3.716634758008203*^9}, {
   3.7166348057320786`*^9, 3.7166348866444254`*^9}, {3.716634934678432*^9, 
   3.716634950151271*^9}, {3.71663498447202*^9, 3.7166349940275564`*^9}, 
   3.716635906785164*^9, {3.716636077735529*^9, 3.716636293193735*^9}, {
   3.7166364065775924`*^9, 3.7166364078924465`*^9}, {3.716636437995269*^9, 
   3.716636450019704*^9}, {3.716636515873743*^9, 3.7166366509453373`*^9}, {
   3.716636681553017*^9, 3.7166366860059395`*^9}, {3.716636720243805*^9, 
   3.716636748869069*^9}, {3.7166369194524918`*^9, 3.7166369675112753`*^9}, {
   3.7166370306581407`*^9, 3.716637354908517*^9}, {3.7166377197330723`*^9, 
   3.7166380176722183`*^9}, {3.7166384508211837`*^9, 3.71663845744549*^9}, {
   3.716638505947996*^9, 3.7166387679333057`*^9}, {3.716638803632849*^9, 
   3.716638967416075*^9}, {3.7166390763614926`*^9, 3.7166391959590697`*^9}, {
   3.7166392388178177`*^9, 3.7166394545961475`*^9}, {3.7166395395713806`*^9, 
   3.716639659498789*^9}, {3.7166411022356586`*^9, 3.716641103250759*^9}, {
   3.716641711133936*^9, 3.71664172025766*^9}, 3.716641753683111*^9, {
   3.7166418141201677`*^9, 3.716641816476329*^9}, {3.7166418609206142`*^9, 
   3.7166418675560446`*^9}, {3.716711296988597*^9, 3.7167113173939104`*^9}, {
   3.7167113619186044`*^9, 3.7167114625600986`*^9}, {3.716711574748316*^9, 
   3.716711620907818*^9}, {3.7167117109591064`*^9, 3.7167117237280517`*^9}, 
   3.716711800389514*^9, {3.716712010856454*^9, 3.7167120510507917`*^9}, {
   3.7167120935955935`*^9, 3.716712200076744*^9}, {3.7167122366521745`*^9, 
   3.716712481875655*^9}, {3.7167127637502875`*^9, 3.7167128084013653`*^9}, {
   3.716712874651329*^9, 3.716712924392576*^9}, {3.716712972307913*^9, 
   3.7167129797804585`*^9}, {3.716713023254218*^9, 3.7167130241068463`*^9}, {
   3.7167144145532*^9, 3.716714448598859*^9}, {3.7167145660361986`*^9, 
   3.7167145677412815`*^9}, {3.716714606816677*^9, 3.7167146895122705`*^9}, {
   3.7167147775297885`*^9, 3.7167147781917534`*^9}, {3.716714810136058*^9, 
   3.7167148653152523`*^9}, {3.719593876147151*^9, 3.7195938788610754`*^9}, {
   3.7195945510529003`*^9, 3.7195945514617567`*^9}, {3.7195945901833544`*^9, 
   3.719594591684504*^9}, {3.7195979088928356`*^9, 3.719597943416867*^9}, {
   3.719597995212073*^9, 3.7195979952511005`*^9}, 3.7195980557818623`*^9, {
   3.7195981215731726`*^9, 3.7195981308400292`*^9}, {3.7195981770688176`*^9, 
   3.7195981771258535`*^9}, {3.7195982187188616`*^9, 3.719598552148904*^9}, {
   3.719598591311916*^9, 3.719598650101863*^9}, {3.719598818285612*^9, 
   3.7195988337979136`*^9}, {3.7195988946714144`*^9, 3.7195989222683973`*^9}, 
   3.7195992042957697`*^9, {3.7195995521485615`*^9, 3.719599554704884*^9}, {
   3.7196000211273165`*^9, 3.719600123886583*^9}, {3.7196001780141506`*^9, 
   3.71960018317339*^9}, {3.7196003493908834`*^9, 3.719600393644693*^9}, {
   3.719600455064816*^9, 3.7196004899875283`*^9}, {3.7196005883460608`*^9, 
   3.7196005986903515`*^9}, {3.7196007010691895`*^9, 3.719600742698332*^9}, {
   3.7196007770305595`*^9, 3.7196008163787613`*^9}, {3.719600849536656*^9, 
   3.71960086049301*^9}, {3.719600929990226*^9, 3.719600930569237*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"CreateDirectory", "::", "filex"}], "MessageName"], 
  RowBox[{
  ":", " "}], \
"\<\"\[NoBreak]\\!\\(\\\"C:\\\\\\\\Users\\\\\\\\Petr\\\\\\\\Desktop\\\\\\\\\
Projects\\\\\\\\Programming Techniques\\\\\\\\shown results\\\\\\\\\\\"\\)\
\[NoBreak] already exists. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/CreateDirectory\\\", ButtonNote -> \
\\\"CreateDirectory::filex\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{
  3.71671280911168*^9, 3.7167128758761096`*^9, {3.716712925028591*^9, 
   3.716712928857549*^9}, {3.7167145563215847`*^9, 3.716714569312237*^9}, 
   3.716714638027997*^9, 3.7167146943829775`*^9, 3.71671475818911*^9, 
   3.71671487496727*^9, 3.716714906557728*^9, 3.7167152555111136`*^9, 
   3.7195946021804795`*^9, 3.7195987477175884`*^9, {3.7195988789392424`*^9, 
   3.7195989265098953`*^9}, 3.719599139620545*^9, 3.7195992073864465`*^9, 
   3.7195998807942915`*^9, {3.719600031232263*^9, 3.7196000493475103`*^9}, {
   3.7196000996462955`*^9, 3.7196001254858646`*^9}, 3.7196001846884556`*^9, {
   3.7196003517696085`*^9, 3.7196003719018483`*^9}, 3.719600409361558*^9, 
   3.7196004576283846`*^9, {3.719600491777182*^9, 3.719600517040056*^9}, 
   3.719600600167799*^9, 3.7196006477648726`*^9, 3.719600702757693*^9, {
   3.7196007456324415`*^9, 3.719600789012987*^9}, 3.7196008266979647`*^9, 
   3.7196008703552923`*^9, 3.7196009488755336`*^9, 3.719601085741945*^9, 
   3.7196427145645437`*^9, 3.7196509973827653`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"CreateDirectory", "::", "filex"}], "MessageName"], 
  RowBox[{
  ":", " "}], \
"\<\"\[NoBreak]\\!\\(\\\"C:\\\\\\\\Users\\\\\\\\Petr\\\\\\\\Desktop\\\\\\\\\
Projects\\\\\\\\Programming Techniques\\\\\\\\shown results\\\\\\\\search\\\\\
\\\\\\\"\\)\[NoBreak] already exists. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\
\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/CreateDirectory\\\", ButtonNote -> \
\\\"CreateDirectory::filex\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{
  3.71671280911168*^9, 3.7167128758761096`*^9, {3.716712925028591*^9, 
   3.716712928857549*^9}, {3.7167145563215847`*^9, 3.716714569312237*^9}, 
   3.716714638027997*^9, 3.7167146943829775`*^9, 3.71671475818911*^9, 
   3.71671487496727*^9, 3.716714906557728*^9, 3.7167152555111136`*^9, 
   3.7195946021804795`*^9, 3.7195987477175884`*^9, {3.7195988789392424`*^9, 
   3.7195989265098953`*^9}, 3.719599139620545*^9, 3.7195992073864465`*^9, 
   3.7195998807942915`*^9, {3.719600031232263*^9, 3.7196000493475103`*^9}, {
   3.7196000996462955`*^9, 3.7196001254858646`*^9}, 3.7196001846884556`*^9, {
   3.7196003517696085`*^9, 3.7196003719018483`*^9}, 3.719600409361558*^9, 
   3.7196004576283846`*^9, {3.719600491777182*^9, 3.719600517040056*^9}, 
   3.719600600167799*^9, 3.7196006477648726`*^9, 3.719600702757693*^9, {
   3.7196007456324415`*^9, 3.719600789012987*^9}, 3.7196008266979647`*^9, 
   3.7196008703552923`*^9, 3.7196009488755336`*^9, 3.719601085741945*^9, 
   3.7196427145645437`*^9, 3.7196509974338017`*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {{{}, {}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[0.012833333333333334`], 
          AbsoluteThickness[1.6], 
          RGBColor[0, 0, 1]], 
         LineBox[{{5., 3.445675805160965*^-6}, {10., 
          2.1040616086834145`*^-6}, {50., 4.343750882038105*^-6}, {100., 
          7.180935002457471*^-6}, {500., 0.00003101841347156666}, {1000., 
          0.00005672535434560033}, {5000., 0.0002720874233932813}, {10000., 
          0.000591659191871734}, {50000., 0.0030838908424566467`}, {100000., 
          0.006388202299292143}, {500000., 0.03130824245974409}, {1.*^6, 
          0.07268690500235195}, {1.0741892538419934`*^6, 
          0.07826409052303716}}]}}}, {}}, {{}, {{{}, {}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[0.012833333333333334`], 
          AbsoluteThickness[1.6], 
          RGBColor[1, 0, 0]], 
         LineBox[{{5., 2.2433548859133083`*^-6}, {10., 
          2.587922466429403*^-6}, {50., 4.204457604807975*^-6}, {100., 
          4.0761611652542425`*^-6}, {500., 7.444859106682314*^-6}, {1000., 
          9.87149462053083*^-6}, {5000., 0.000022055990765590393`}, {10000., 
          0.000039097423550888964`}, {50000., 0.00016380889402233477`}, {
          100000., 0.00030769884940086813`}, {500000., 
          0.0013255331541825654`}, {1.*^6, 0.00283359915133758}, {
          1.164231305939781*^6, 
          0.003307718643708532}}]}}}, {}}, {{}, {{{}, {}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[0.012833333333333334`], 
          AbsoluteThickness[1.6], 
          RGBColor[0, 1, 0]], 
         LineBox[{{5., 2.192036310091757*^-6}, {10., 
          2.1627114096223243`*^-6}, {50., 2.3020046868522765`*^-6}, {100., 
          2.5439351157253295`*^-6}, {500., 4.061498715019763*^-6}, {1000., 
          4.952242566778897*^-6}, {5000., 0.000014347207554681885`}, {10000., 
          0.00002534404523073519}, {50000., 0.00011046323445595974`}, {
          100000., 0.00022229740800874253`}, {500000., 
          0.0010842735324081332`}, {1.*^6, 0.0024039783626226096`}, {
          1.120353485354401*^6, 0.0027072308239900547`}}]}}}, {}}}, {
    DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, AxesOrigin -> {0, 0}, 
     PlotRange -> {{0, 1.249925*^6}, {0, 0.07826409052303716}}, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, False}, 
     AxesLabel -> {
       FormBox["\"n\"", TraditionalForm], 
       FormBox["\"t\"", TraditionalForm]}, AxesOrigin -> {0, 0}, 
     DisplayFunction :> Identity, Frame -> {{True, True}, {True, True}}, 
     FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> Automatic, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {Automatic, Automatic}, GridLinesStyle -> Directive[
       GrayLevel[0.4, 0.5], 
       AbsoluteThickness[1], 
       AbsoluteDashing[{1, 2}]], ImageSize -> Scaled[0.8], Method -> {}, 
     PlotLabel -> 
     FormBox["\"Compare binary Search, linear search and search using search \
by key\"", TraditionalForm], 
     PlotRange -> {{0, 1.249925*^6}, {0, 0.07826409052303716}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    TagBox[
     GridBox[{{
        FormBox[
         TemplateBox[{"\"Linear Search\""}, "PointLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.231], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.231], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"PointLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.012833333333333334`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 0, 1]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "True", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"Binary Search\""}, "PointLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.231], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.231], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"PointLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.012833333333333334`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "True", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"Search by Key\""}, "PointLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.231], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.231], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"PointLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.012833333333333334`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0.6666666666666666, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 1, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 1, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "True", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}}, 
      GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      GridBoxSpacings -> {"Columns" -> {{0}}}], "Grid"], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.719599139870815*^9, 3.71959920752015*^9, 3.719599880945788*^9, {
   3.7196000342618704`*^9, 3.7196000494755745`*^9}, {3.7196000997841635`*^9, 
   3.7196001257100744`*^9}, 3.719600184908635*^9, {3.7196003519947853`*^9, 
   3.7196003721355124`*^9}, 3.719600409602453*^9, 3.719600457874558*^9, {
   3.719600492023857*^9, 3.719600517279354*^9}, 3.719600600411542*^9, 
   3.7196006480055437`*^9, 3.7196007030163746`*^9, {3.7196007459156413`*^9, 
   3.7196007894187913`*^9}, 3.7196008270933447`*^9, 3.719600870737809*^9, 
   3.7196009492785964`*^9, 3.7196010859490905`*^9, 3.7196427149047866`*^9, 
   3.7196509980056257`*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {}, {
       Directive[
        Opacity[1.], 
        AbsoluteThickness[1.6], 
        RGBColor[0, 0, 1]], 
       LineBox[CompressedData["
1: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
        "]]}, {
       Directive[
        Opacity[1.], 
        AbsoluteThickness[1.6], 
        RGBColor[1, 0, 0]], 
       LineBox[{{0.002040816326530612, -13.193223979790401`}, {
        30.671792055962676`, -12.5181655337629}, {
        61.341543295598825`, -12.345835829802931`}, {
        92.01129453523498, -12.377621461116096`}, {
        122.68104577487112`, -12.585571062813921`}, {
        153.35079701450726`, -13.066051236383906`}, {
        184.02054825414342`, -14.527726376238608`}, {
        191.68798606405232`, -16.71611292266317}}], 
       LineBox[CompressedData["
1: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
        "]]}, {
       Directive[
        Opacity[1.], 
        AbsoluteThickness[1.6], 
        RGBColor[0, 1, 0]], 
       LineBox[CompressedData["
1:eJwVlHk4Ve33xpVKciqKSiXn4BxbEgmpvKwkhV6iScmcFKISogyVqTQYGl+V
eTyG4xzzuJBEfCNj5rGMyXxS8du/P/a1r8+1r/3c676ftRbNysnIZjkPD08n
+fz/u/ItfexbjoXG+7rIdpOVO/HeBsfgBaY6UMqFLuoK78Qxyy+sHKY+nHkV
syjbJ4PHO7MpeTxnIerU5jFKqQxGPVhx6AXTDAbMjH8aJ8vg761J+ftlrSF8
TMaTP1AGGZOfTyXy2MLViiWRO5dk8ETl3I9NzXZQbKFjnaAtg7ffij3wYzqC
Qb3G1qMyMtiwP1rIA66Dh6lY2dg6GRyKzTLbI+sM9z01Hq/jEri4voo5JOIC
HqfCtgsPErjxdgc3gscN5GwdOZbNBBLfJo6cHb0FAtm5RVY1BKob8oata/aA
1tnr9c8qCTxZuKmnAu/AeOOzgmcfCbwsvVPOk+kFVSsvj8vXEahRteOfrXo+
4GxouM6U/L/aK7HfBe5Cjhdfg1gZgaeUFB/WK9+Dxee+NqG5BHYPFyjIyd6H
wFI944x0Au0ijrQEUn3hW3rAwRsJBM6c+uw5IOIHviXa3rURBK7BvupwngA4
2aafqRpK4DMXh+vzswHgeVNa+J9HBIrLzm0+ORoI77sePn3vT2Byj3dxWs8D
2PKmuqj6LoFKL/ht1jQ/BJ8gqRQ9TwJL9MIELn0KghD/wobD7gTqLhNjl+Ij
kH/LFWS5ENiYHW8slv0Y1twTfPP4BoHmDgpLt5hPwGw2cXmbE4EjtPy4xsin
sMbD+bnxVQLzR2mMLXrBUPxC2LHJjkCfD5d+VVQEg7TCCuWIywQeiWLWOEMI
5ChZlbEvkX7u/IygFYQA0SUqutaGwLozys6flUMhkB5ixbQm8PkeD21PVihk
PS4eeWhF4HlKiaisbBio3nq1PcmSQOp33vHWuDCY+vPFi5fkwdJj6E99BouF
fayXFqT/N4/DlMKfQbKT2mVrkq+5fbnUJ/IcOpeqrl4kWdlo84Hg4Oewn+dp
+CuSF3ZdWKsu8AJcBdza/pKMfFE9o34v4Oh5HWooeb5f3yDnNc9LWLhZdPUk
WY9u0c6Ao7dfQvu11BoNsl7BV07nZ2dfwvIYK/3TFwlsupEpF3PtFRTtWOAP
Jf399+8vHsPRV9Cd3bV1hvRvQag3Ltq8hoMhZyLcyXzovPcTUnpeQztTIodK
5sfKpeivbv4PjHcYideQ+bqEGdKyT4SDPXMbs4bM/4DjixnrT+HQX8VS/36d
wApJangJvoGOOzrVVq4Etj3ZO+TKfAdRBQGSaj4EqqRG27sqRMCieIX8uvsE
hn0SmnDJigDN33oRo34EMlZwPfLNI6Fgtsi+KIjALmi+m3clCu7ZnbC1e0kg
pe7x4f0pUbDPfDHhyH+kvvmRlXk/ooDDaBUWfkvgC8/MwFznaOjnO7rWM5rA
9xQHXdXsaLj1flmxYByBU+GSlFxuNPSYm31/QPa3QX7o0xzPGFCeGjDekUKg
l46u4T6MgbA0dSvFNAJTWpdtzFkeC3r3V9uLsUg/tnmNKkdiITJVuKI9g8DV
89deZAfEQpDaqdIrHNKfP2GsUh0LD3ds4pRnEnhRpEc0mxIHtmmPpgezCAyN
fdmubBAHVOL5YE02eb97Dd5mhcSBCTf/180cAn+UrTJXbowDrTNO7DaStxsV
U7M2xUPKBofEBZJ1e136lM7FQ+aafU/rSb51TS42MzweVmjl779AcvzSgI1S
VzyEXu9/95I8v/HJG+lMagK0+qt1+ZD6y3ecGt5rnQD+NEctEbK+PakCTE5c
AnxdCDcwYpP9oFbusHcoAW4fD+Iok36ffPLYzdmZCPUy902LUgksPK/4U/Fq
IqQfbnH7nkzO3/BwBjs9EUas111lk3lucY9yVpxKhBXEy5HtsQRqrz6nzFZK
gqQtS330SAJvvhSc3+OWBD7S0U9rwgmMZnzMzchLgg311dcFyfuty/L22PMn
Ceaf/HNyMoTcl1r71DLUkyG1Y5e2E7lfzlvHl7DKk4F5hm+9FtlPgVOmdxVW
MUGyq83uDbk/su+KHGYdY0KCZX/3M3JfbIz0/ZBeywSIm5+wJ+dDU14tUF4w
Bd4/fi2gb0LOY/G0TrpRCmjyLOxvMSKwpsOqNq0lBU5V9y0fAgJ9RQ81pvam
wgYG49/jogSyE7nP5aTSQOEmX3DaOgJ79rHOpl5KA90jnJJaXgLVzoi3p4ym
Qc3fZXYG49I4G/q3lzmbDn/qBU/lFkkjpesu9oqyQFxNepccWxrfTa0IHldl
gZK3COEZL42l2wTkV7qxoDpQTzX3iTSudtx8VWmaBW5DfO7tptL4fIPCcOho
BnQ14Gg8l4EMaU7uuzVs2LY7R65ulIG5B1UCk2XYoCGycXq6i4EdF9Wky2zZ
cP5YkatCBQMd3Uvmav3ZIC50sEwvl4FLjzU/fI1jA1AMUy4xGSiRc8xmsp8N
x44c+BARwsDMT5+U/i7nQPpbw5Xoy0DtHv0V/BIcOFzhv3zAjYGtM/UNwoc4
IBDIG02xZ+AV/tMxVAsOBNQw8w+YMXBBrPXGLm8OUM5FbnIyZOAjRRNN1Xcc
iNRR6CzVY+COo11CWkUceNGpd2bkGANZJpa9Bh0cyHIgBjdpM1Dz2gDL5DcH
CAtz36OHGdjoa+tjuzUTShJe7b4DDJxPvSrubZwJDz7/ejJ5gIHqPB6maY2Z
0DrT/0NAgYGfYkO/UmqzoF1voGFhKwO/jZfXVxXlgLf6HsmoaTqWCubn7e/I
gZSWk5GnJ+n4Zi8rKmkhB1Yf2OK6doKOhu5vrj/Ylwtscz+xgBE6Fq5wEdLJ
yAX//236E9VLx5BtDMOPsXlwUFVQ1LmOjmo6gXUfggqgSL+k5CqLjpscvHJV
kgtgevHWwYA0Ok4+uRkZ/7EApIy9MmJS6BjfaHHNf2UhtK3uvTeYSEchi/2C
2t6FcOjYjPujKDp+cx0xqLhRBLsqlaptwki92OOfy8+VwNYWb15VdzoaGf8r
+dGjBOoFoo2D3Oi4gaLvVhNOfneOHux1oWOos4F4U2cJxJcWR7y6QUddWtK+
aQWEsdY5y10OdDz+kxmwIguBxtBIGjWno8GTDGnpolIwTtZwLdGho8JQhmFS
bSl0iL/+4nqMjoKa7NuyXaVQlCKvtucoHetm2Z/ll0oBngkrpWvR8YRpppvq
oTJ40JcW81mDrG9XTqVORRn8uzp5VbQKHc9UF9o61JbDnk4hwSApOub0Fhbe
TKiEE+dbbUtapPCzyPqwNY2fYIzSHS8eIoV8G8vdJMc/g0r/15USp6Ww6ixr
S2d3PShuPxrqIymF9kqEitNUA4iWZwWsn5bEnB5hdextAp2zfyI7qiQx7Lpi
rVFlC2wwfBbpFyuJ1YK/tu9q/goVGnuza7wkkemtdPZ9aTu0B9tMl5lK4tCf
LUYxzZ1wa6p4vv+gJGaZ7W4s7+0GLb3wucPbJVHk2IXI+oEecLXeqbawJIGL
32ezL473QlHIhhnrPgksnKjSPDvQBxnf5VujKiUw0Wtq9/hEPzQ1uCVcYUpg
hzenK2ZuALzlow6aBEvg4FAab/7oIECUuMIrNwnc/nUx0Hn2G1iv7fWTM5VA
Ys+D+4/Gv4Na7VJmq5YE3vnNPPShZwjyTSwDveVJ/eOSFjFDw8AebVm6u00C
T69qmu7uGgGPFkqrJ78EftVu/14yPAqhsicvhs/RMO6XewROjEHu4nRl8gAN
tYVP1lAHxkG3aVLWsZGGItk+56TGf8AwX4LkyXIa5pUMmQQMTEBRmG/TJw4N
G97OBPvZ/wRD5jR9NpaG5uLiUqITP8GBuyCm+ZyGzY3frndcmYT1Q4Z5c/40
HKhtdZr8MQkffjN+NbjRsGPBllCxnwLmcetNvHY05FqUawoMTgGHt3xDyQUa
MtforFW8Mg2ugnb58fo01BmyDw0cmAaDxpjXpYdo6MWfV6lgNwMFfuyHFCUa
tlh/MbsyPgOigg2erQwabp0KZNXbzkLFoJtG8VYazpRfYQeNzUKi4K19LWtJ
P1XfHV0uz4H9t9b//i6jYdRqxccTvXPwJcdM6NEcFalB8SYFNvOg+/Rh/YkR
Kj48lDuQ3TMPHap6Y4LdVMz+ycvf0TcPXLMC/u4uKvZFGMgtG5yHRxXEzlSS
Dyx+c9EbnofM11xnHZJH8kX4eibnYduJc7L3Oqmoq+Qsw8/LhTbpAGKmnYpr
pHc7mtC5wJHoOdvWSkWVZvdQH2kuGKYnNSSSbOVXkR0nw4U3q0yM3EjO77+w
NCHHBarzDWNhku0ig4J9VbiQ1G0ZoN9CxWrRYXbqUS5o+bCcypuoOPdRqeWL
DheEtyWKhpIsccvn97weF6LXen6wINmjebOW5gkuxFsXEouNVNwZpt3UbMyF
I6Ve6/eTfEYz9Nfv81zIWGVQx0fyvclOMZopFyZvz4c1N1CxzcDlkr0lFyxt
/id5k+RVS/gw2JoLZSG/JzRJVkyjpGfZcOG02WKxEMlmpsYNbbaknnRzcM8X
Ml9K7PzSFS446N6zSSf5/wDLKvIe
        "]]}}}, {Ticks -> {Automatic, 
       Charting`ScaledTicks[{Log, Exp}]}, GridLines -> {Automatic, 
       Charting`ScaledTickValues[{Log, Exp}]}, FrameTicks -> {{
        Charting`ScaledTicks[{Log, Exp}], 
        Charting`ScaledFrameTicks[{Log, Exp}]}, {Automatic, Automatic}}, 
     AxesOrigin -> {0, -17.29925344862395}, 
     PlotRange -> {{0, 100000}, {-17.29925344862395, -4.470161877486791}}, 
     DisplayFunction -> Identity, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None}, DisplayFunction -> 
     Identity, DisplayFunction -> Identity, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "ClippingRange" -> {{{0.002040816326530612, 
        99999.99795918367}, {-16.71611292266317, -5.053302403447571}}, {{
        0.002040816326530612, 
        99999.99795918367}, {-16.71611292266317, -5.053302403447571}}}}, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, False}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, -17.}, 
     CoordinatesToolOptions -> {"DisplayFunction" -> ({
         Part[#, 1], 
         Exp[
          Part[#, 2]]}& ), "CopiedValueFunction" -> ({
         Part[#, 1], 
         Exp[
          Part[#, 2]]}& )}, DisplayFunction :> Identity, 
     Frame -> {{True, True}, {True, True}}, 
     FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> Automatic, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {Automatic, Automatic}, GridLinesStyle -> Directive[
       GrayLevel[0.4, 0.5], 
       AbsoluteThickness[1], 
       AbsoluteDashing[{1, 2}]], ImageSize -> Scaled[0.8], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None}, PlotLabel -> 
     FormBox["\"Compare binary Search, linear search and search using search \
by key (Log scale)\"", TraditionalForm], 
     PlotRange -> {{0, 100000}, {-16.71611292266317, -5.053302403447571}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
      "\"Linear Search\"", "\"Binary Search\"", "\"Search by Key\""}, 
      "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 0, 1]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0.6666666666666666, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 1, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 1, 0], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.719599139870815*^9, 3.71959920752015*^9, 3.719599880945788*^9, {
   3.7196000342618704`*^9, 3.7196000494755745`*^9}, {3.7196000997841635`*^9, 
   3.7196001257100744`*^9}, 3.719600184908635*^9, {3.7196003519947853`*^9, 
   3.7196003721355124`*^9}, 3.719600409602453*^9, 3.719600457874558*^9, {
   3.719600492023857*^9, 3.719600517279354*^9}, 3.719600600411542*^9, 
   3.7196006480055437`*^9, 3.7196007030163746`*^9, {3.7196007459156413`*^9, 
   3.7196007894187913`*^9}, 3.7196008270933447`*^9, 3.719600870737809*^9, 
   3.7196009492785964`*^9, 3.7196010859490905`*^9, 3.7196427149047866`*^9, 
   3.7196509981138372`*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {}, {
       Directive[
        Opacity[1.], 
        AbsoluteThickness[1.6], 
        RGBColor[0, 0, 1]], 
       LineBox[CompressedData["
1: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

        "]]}}}, {
    DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, False}, 
     AxesLabel -> {
       FormBox["\"n\"", TraditionalForm], 
       FormBox["\"t\"", TraditionalForm]}, AxesOrigin -> {0, 0}, 
     DisplayFunction :> Identity, Frame -> {{True, True}, {True, True}}, 
     FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> Automatic, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {Automatic, Automatic}, GridLinesStyle -> Directive[
       GrayLevel[0.4, 0.5], 
       AbsoluteThickness[1], 
       AbsoluteDashing[{1, 2}]], ImageSize -> Scaled[0.8], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None}, 
     PlotRange -> {{0, 100000}, {0., 0.006388202152619898}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"Linear Search\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{"Directive", "[", 
               RowBox[{
                 RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                 RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 0, 1]"], Appearance -> None, BaseStyle -> {},
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                   ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                  False]}], "]"}], "}"}], ",", 
           RowBox[{"{", #, "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.719599139870815*^9, 3.71959920752015*^9, 3.719599880945788*^9, {
   3.7196000342618704`*^9, 3.7196000494755745`*^9}, {3.7196000997841635`*^9, 
   3.7196001257100744`*^9}, 3.719600184908635*^9, {3.7196003519947853`*^9, 
   3.7196003721355124`*^9}, 3.719600409602453*^9, 3.719600457874558*^9, {
   3.719600492023857*^9, 3.719600517279354*^9}, 3.719600600411542*^9, 
   3.7196006480055437`*^9, 3.7196007030163746`*^9, {3.7196007459156413`*^9, 
   3.7196007894187913`*^9}, 3.7196008270933447`*^9, 3.719600870737809*^9, 
   3.7196009492785964`*^9, 3.7196010859490905`*^9, 3.7196427149047866`*^9, 
   3.7196509983690195`*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {}, {
       Directive[
        Opacity[1.], 
        AbsoluteThickness[1.6], 
        RGBColor[0, 0, 1]], 
       LineBox[CompressedData["
1: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
        "]]}}}, {
    DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, False}, 
     AxesLabel -> {
       FormBox["\"n\"", TraditionalForm], 
       FormBox["\"t\"", TraditionalForm]}, AxesOrigin -> {0, 0}, 
     DisplayFunction :> Identity, Frame -> {{True, True}, {True, True}}, 
     FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> Automatic, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {Automatic, Automatic}, GridLinesStyle -> Directive[
       GrayLevel[0.4, 0.5], 
       AbsoluteThickness[1], 
       AbsoluteDashing[{1, 2}]], ImageSize -> Scaled[0.8], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None}, 
     PlotRange -> {{0, 100000}, {-6.231713020428873*^-6, 
       0.00030769884343361794`}}, PlotRangeClipping -> True, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"Binary Search\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{"Directive", "[", 
               RowBox[{
                 RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                 RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 0, 1]"], Appearance -> None, BaseStyle -> {},
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                   ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                  False]}], "]"}], "}"}], ",", 
           RowBox[{"{", #, "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.719599139870815*^9, 3.71959920752015*^9, 3.719599880945788*^9, {
   3.7196000342618704`*^9, 3.7196000494755745`*^9}, {3.7196000997841635`*^9, 
   3.7196001257100744`*^9}, 3.719600184908635*^9, {3.7196003519947853`*^9, 
   3.7196003721355124`*^9}, 3.719600409602453*^9, 3.719600457874558*^9, {
   3.719600492023857*^9, 3.719600517279354*^9}, 3.719600600411542*^9, 
   3.7196006480055437`*^9, 3.7196007030163746`*^9, {3.7196007459156413`*^9, 
   3.7196007894187913`*^9}, 3.7196008270933447`*^9, 3.719600870737809*^9, 
   3.7196009492785964`*^9, 3.7196010859490905`*^9, 3.7196427149047866`*^9, 
   3.719650998431547*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {}, {
       Directive[
        Opacity[1.], 
        AbsoluteThickness[1.6], 
        RGBColor[0, 0, 1]], 
       LineBox[CompressedData["
1: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
        "]]}}}, {
    DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, False}, 
     AxesLabel -> {
       FormBox["\"n\"", TraditionalForm], 
       FormBox["\"t\"", TraditionalForm]}, AxesOrigin -> {0, 0}, 
     DisplayFunction :> Identity, Frame -> {{True, True}, {True, True}}, 
     FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> Automatic, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {Automatic, Automatic}, GridLinesStyle -> Directive[
       GrayLevel[0.4, 0.5], 
       AbsoluteThickness[1], 
       AbsoluteDashing[{1, 2}]], ImageSize -> Scaled[0.8], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None}, 
     PlotRange -> {{0, 100000}, {0., 0.0002222974030507181}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"Search by Key\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{"Directive", "[", 
               RowBox[{
                 RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                 RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 0, 1]"], Appearance -> None, BaseStyle -> {},
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                   ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                  False]}], "]"}], "}"}], ",", 
           RowBox[{"{", #, "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.719599139870815*^9, 3.71959920752015*^9, 3.719599880945788*^9, {
   3.7196000342618704`*^9, 3.7196000494755745`*^9}, {3.7196000997841635`*^9, 
   3.7196001257100744`*^9}, 3.719600184908635*^9, {3.7196003519947853`*^9, 
   3.7196003721355124`*^9}, 3.719600409602453*^9, 3.719600457874558*^9, {
   3.719600492023857*^9, 3.719600517279354*^9}, 3.719600600411542*^9, 
   3.7196006480055437`*^9, 3.7196007030163746`*^9, {3.7196007459156413`*^9, 
   3.7196007894187913`*^9}, 3.7196008270933447`*^9, 3.719600870737809*^9, 
   3.7196009492785964`*^9, 3.7196010859490905`*^9, 3.7196427149047866`*^9, 
   3.719650998490589*^9}]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{"\"\<Comp1.gif\>\"", ",", "Plot1", ",", 
    RowBox[{"ImageSize", "\[Rule]", "2048"}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{"\"\<Comp2.gif\>\"", ",", "Plot2", ",", 
    RowBox[{"ImageSize", "\[Rule]", "2048"}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{"\"\<Linear.gif\>\"", ",", "Plot3", ",", 
    RowBox[{"ImageSize", "\[Rule]", "2048"}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{"\"\<Binary.gif\>\"", ",", "Plot4", ",", 
    RowBox[{"ImageSize", "\[Rule]", "2048"}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{"\"\<Map.gif\>\"", ",", "Plot5", ",", 
    RowBox[{"ImageSize", "\[Rule]", "2048"}]}], "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.71664110869312*^9, 3.716641146244195*^9}, {
  3.7166412022296147`*^9, 3.716641205389699*^9}, {3.716641347274222*^9, 
  3.7166413580157037`*^9}, {3.7166414457407713`*^9, 3.716641500648283*^9}, {
  3.7166415725013237`*^9, 3.7166415924800997`*^9}, {3.716641782741521*^9, 
  3.716641783365637*^9}, {3.716712493848918*^9, 3.716712541256122*^9}, {
  3.716714795181678*^9, 3.7167147992854233`*^9}, {3.719598218784408*^9, 
  3.719598243933489*^9}, {3.7195994527640038`*^9, 3.719599469495936*^9}, {
  3.7195995613430743`*^9, 3.719599566804941*^9}, {3.7196005157182493`*^9, 
  3.719600515806099*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"grid", " ", "=", " ", 
  RowBox[{"Grid", "[", 
   RowBox[{
    RowBox[{"Transpose", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Join", "[", 
        RowBox[{
         RowBox[{"{", "\"\<Time\>\"", "}"}], ",", 
         RowBox[{"binarySearchResults", "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", "1"}], "]"}], "]"}]}], "]"}], ",", 
       RowBox[{"Join", "[", 
        RowBox[{
         RowBox[{"{", "\"\<Linear Search\>\"", "}"}], ",", 
         RowBox[{"linearSearchResults", "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", "2"}], "]"}], "]"}]}], "]"}], ",", 
       RowBox[{"Join", "[", 
        RowBox[{
         RowBox[{"{", "\"\<Binary Search\>\"", "}"}], ",", 
         RowBox[{"binarySearchResults", "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", "2"}], "]"}], "]"}]}], "]"}], ",", 
       RowBox[{"Join", "[", 
        RowBox[{
         RowBox[{"{", "\"\<Search by Key\>\"", "}"}], ",", 
         RowBox[{"mapSearchResults", "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", "2"}], "]"}], "]"}]}], "]"}]}], "}"}], "]"}], 
    ",", 
    RowBox[{"Frame", "\[Rule]", "All"}], ",", 
    RowBox[{"Alignment", "\[Rule]", "Left"}], ",", 
    RowBox[{"Background", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"None", ",", 
       RowBox[{"{", "Yellow", "}"}]}], "}"}]}], ",", 
    RowBox[{"ItemStyle", "\[Rule]", 
     RowBox[{"Directive", "[", 
      RowBox[{
       RowBox[{"FontSize", "\[Rule]", "20"}], ",", "Bold"}], "]"}]}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.716713751390085*^9, 3.7167137514206266`*^9}, {
   3.7167138547988224`*^9, 3.716713858902309*^9}, {3.7167139538829703`*^9, 
   3.716713987760606*^9}, {3.7167140374458113`*^9, 3.71671405406323*^9}, {
   3.716714092876899*^9, 3.7167141043085494`*^9}, {3.719594669746122*^9, 
   3.719594673946548*^9}, {3.7195979953701706`*^9, 3.719597995372173*^9}, {
   3.7195980772600527`*^9, 3.719598077263054*^9}, {3.7195981771413803`*^9, 
   3.7195981884165535`*^9}, {3.7195982439354887`*^9, 
   3.7195982643558407`*^9}, {3.71959871093808*^9, 3.71959873671665*^9}, 
   3.7196004017953653`*^9}],

Cell[BoxData[
 TagBox[GridBox[{
    {"\<\"Time\"\>", "\<\"Linear Search\"\>", "\<\"Binary Search\"\>", \
"\<\"Search by Key\"\>"},
    {"5", "3.445675805160965`*^-6", "2.2433548859133083`*^-6", 
     "2.192036310091757`*^-6"},
    {"10", "2.1040616086834145`*^-6", "2.587922466429403`*^-6", 
     "2.1627114096223243`*^-6"},
    {"50", "4.343750882038105`*^-6", "4.204457604807975`*^-6", 
     "2.3020046868522765`*^-6"},
    {"100", "7.180935002457471`*^-6", "4.0761611652542425`*^-6", 
     "2.5439351157253295`*^-6"},
    {"500", "0.00003101841347156666`", "7.444859106682314`*^-6", 
     "4.061498715019763`*^-6"},
    {"1000", "0.00005672535434560033`", "9.87149462053083`*^-6", 
     "4.952242566778897`*^-6"},
    {"5000", "0.0002720874233932813`", "0.000022055990765590393`", 
     "0.000014347207554681885`"},
    {"10000", "0.000591659191871734`", "0.000039097423550888964`", 
     "0.00002534404523073519`"},
    {"50000", "0.0030838908424566467`", "0.00016380889402233477`", 
     "0.00011046323445595974`"},
    {"100000", "0.006388202299292143`", "0.00030769884940086813`", 
     "0.00022229740800874253`"},
    {"500000", "0.03130824245974409`", "0.0013255331541825654`", 
     "0.0010842735324081332`"},
    {"1000000", "0.07268690500235195`", "0.00283359915133758`", 
     "0.0024039783626226096`"},
    {"5000000", "0.3733873559093462`", "0.014381202445554776`", 
     "0.012482704723540792`"}
   },
   AutoDelete->False,
   GridBoxAlignment->{"Columns" -> {{Left}}},
   GridBoxBackground->{"Columns" -> {{None}}, "Rows" -> {
       RGBColor[1, 1, 0]}},
   GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
   GridBoxItemStyle->{"Columns" -> {{
        Directive[FontSize -> 20, Bold]}}, "Rows" -> {{
        Directive[FontSize -> 20, Bold]}}}],
  "Grid"]], "Output",
 CellChangeTimes->{
  3.719598752310638*^9, {3.7195988824346485`*^9, 3.7195989300440264`*^9}, 
   3.7195994117715397`*^9, 3.7195999057895412`*^9, 3.7196000386789837`*^9, {
   3.7196001044640293`*^9, 3.719600130072216*^9}, 3.7196001893409595`*^9, 
   3.7196004128907433`*^9, 3.7196004615085907`*^9, {3.719600495941467*^9, 
   3.7196005213963943`*^9}, 3.719600602944832*^9, 3.719600650782196*^9, {
   3.719600748924259*^9, 3.7196007924345427`*^9}, 3.7196008302193155`*^9, 
   3.7196008743909693`*^9, 3.7196009532417135`*^9, 3.7196010890090523`*^9, 
   3.7196427251249275`*^9, 3.7196510017824106`*^9}]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{"\"\<TableSerch.gif\>\"", ",", "grid", ",", 
    RowBox[{"ImageSize", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"2048", ",", "720"}], "}"}]}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{"\"\<TableSeach.xls\>\"", ",", "grid", ",", 
    RowBox[{"ImageSize", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"2048", ",", "720"}], "}"}]}]}], "]"}], 
  ";"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.7167141124319644`*^9, 3.7167141580770206`*^9}, {
   3.7167142286741667`*^9, 3.7167142875889273`*^9}, 3.716714849258524*^9, {
   3.7167150760023284`*^9, 3.716715087906725*^9}, {3.7167151787587595`*^9, 
   3.716715179553131*^9}, {3.7195994773830156`*^9, 3.7195994864164047`*^9}}]
},
WindowSize->{1350, 685},
WindowMargins->{{-8, Automatic}, {Automatic, 0}},
Magnification:>0.9 Inherited,
FrontEndVersion->"10.2 for Microsoft Windows (64-bit) (July 7, 2015)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 13560, 322, 1035, "Input"],
Cell[14143, 346, 1565, 26, 19, "Message"],
Cell[15711, 374, 1579, 26, 19, "Message"],
Cell[17293, 402, 20559, 410, 644, "Output"],
Cell[37855, 814, 30740, 574, 637, "Output"],
Cell[68598, 1390, 11400, 221, 625, "Output"],
Cell[80001, 1613, 13799, 260, 619, "Output"],
Cell[93803, 1875, 12362, 236, 619, "Output"]
}, Open  ]],
Cell[106180, 2114, 1496, 33, 193, "Input"],
Cell[CellGroupData[{
Cell[107701, 2151, 2146, 51, 102, "Input"],
Cell[109850, 2204, 2468, 49, 314, "Output"]
}, Open  ]],
Cell[112333, 2256, 796, 18, 161, "Input"]
}
]
*)

(* End of internal cache information *)
