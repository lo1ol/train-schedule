(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.2' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    139244,       2719]
NotebookOptionsPosition[    138415,       2690]
NotebookOutlinePosition[    138786,       2706]
CellTagsIndexPosition[    138743,       2703]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[BoxData[{
 RowBox[{
  RowBox[{"SetDirectory", "[", 
   RowBox[{"NotebookDirectory", "[", "]"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"workingDirectory", " ", "=", " ", 
   RowBox[{"CreateDirectory", "[", "\"\<shown results\>\"", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SetDirectory", "[", "workingDirectory", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"file", "=", " ", 
   RowBox[{"OpenRead", "[", "\"\<../log_search.txt\>\"", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"workingDirectory", " ", "=", " ", 
   RowBox[{"CreateDirectory", "[", "\"\<search\>\"", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SetDirectory", "[", "workingDirectory", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"filelist", "=", " ", 
    RowBox[{"ReadList", "[", 
     RowBox[{"file", ",", "String"}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"mapSearchResults", " ", "=", " ", 
   RowBox[{"filelist", "[", 
    RowBox[{"[", 
     RowBox[{"3", ";;", ";;", "4"}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"binarySearchResults", " ", "=", " ", 
   RowBox[{"filelist", "[", 
    RowBox[{"[", 
     RowBox[{"2", ";;", ";;", "4"}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"linearSearchResults", " ", "=", " ", 
   RowBox[{"filelist", "[", 
    RowBox[{"[", 
     RowBox[{"1", ";;", ";;", "4"}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"linearSearchResults", "=", " ", 
   RowBox[{"Map", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"StringSplit", "[", "#", "]"}], "[", 
          RowBox[{"[", "4", "]"}], "]"}], ",", 
         RowBox[{
          RowBox[{"StringSplit", "[", "#", "]"}], "[", 
          RowBox[{"[", "7", "]"}], "]"}]}], "}"}], ")"}], "&"}], ",", 
     "linearSearchResults"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"binarySearchResults", "=", " ", 
   RowBox[{"Map", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"StringSplit", "[", "#", "]"}], "[", 
          RowBox[{"[", "4", "]"}], "]"}], ",", 
         RowBox[{
          RowBox[{"StringSplit", "[", "#", "]"}], "[", 
          RowBox[{"[", "7", "]"}], "]"}]}], "}"}], ")"}], "&"}], ",", 
     "binarySearchResults"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"mapSearchResults", "=", " ", 
   RowBox[{"Map", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"StringSplit", "[", "#", "]"}], "[", 
          RowBox[{"[", "4", "]"}], "]"}], ",", 
         RowBox[{
          RowBox[{"StringSplit", "[", "#", "]"}], "[", 
          RowBox[{"[", "7", "]"}], "]"}]}], "}"}], ")"}], "&"}], ",", 
     "mapSearchResults"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"linearSearchResults", "=", " ", 
   RowBox[{"Map", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Read", "[", 
          RowBox[{
           RowBox[{"StringToStream", "[", 
            RowBox[{"#", "[", 
             RowBox[{"[", "1", "]"}], "]"}], "]"}], ",", "Number"}], "]"}], 
         ",", 
         RowBox[{"Read", "[", 
          RowBox[{
           RowBox[{"StringToStream", "[", 
            RowBox[{"#", "[", 
             RowBox[{"[", "2", "]"}], "]"}], "]"}], ",", "Number"}], "]"}]}], 
        "}"}], ")"}], "&"}], ",", "linearSearchResults"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"binarySearchResults", "=", " ", 
   RowBox[{"Map", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Read", "[", 
          RowBox[{
           RowBox[{"StringToStream", "[", 
            RowBox[{"#", "[", 
             RowBox[{"[", "1", "]"}], "]"}], "]"}], ",", "Number"}], "]"}], 
         ",", 
         RowBox[{"Read", "[", 
          RowBox[{
           RowBox[{"StringToStream", "[", 
            RowBox[{"#", "[", 
             RowBox[{"[", "2", "]"}], "]"}], "]"}], ",", "Number"}], "]"}]}], 
        "}"}], ")"}], "&"}], ",", "binarySearchResults"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"mapSearchResults", "=", " ", 
   RowBox[{"Map", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Read", "[", 
          RowBox[{
           RowBox[{"StringToStream", "[", 
            RowBox[{"#", "[", 
             RowBox[{"[", "1", "]"}], "]"}], "]"}], ",", "Number"}], "]"}], 
         ",", 
         RowBox[{"Read", "[", 
          RowBox[{
           RowBox[{"StringToStream", "[", 
            RowBox[{"#", "[", 
             RowBox[{"[", "2", "]"}], "]"}], "]"}], ",", "Number"}], "]"}]}], 
        "}"}], ")"}], "&"}], ",", "mapSearchResults"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Plot1", " ", "=", " ", 
  RowBox[{"Show", "[", 
   RowBox[{
    RowBox[{"ListPlot", "[", 
     RowBox[{"linearSearchResults", ",", 
      RowBox[{"Joined", "\[Rule]", "True"}], ",", 
      RowBox[{"PlotStyle", "\[Rule]", "Blue"}], ",", 
      RowBox[{"PlotLegends", "\[Rule]", 
       RowBox[{"{", "\"\<Linear Search\>\"", "}"}]}], ",", 
      RowBox[{
      "PlotLabel", "\[Rule]", 
       "\"\<Compare binary Search, linear search and search using search by \
key\>\""}], ",", " ", 
      RowBox[{"AxesLabel", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"\"\<n\>\"", ",", "\"\<t\>\""}], "}"}]}], ",", 
      RowBox[{"PlotTheme", "\[Rule]", "\"\<Detailed\>\""}], ",", 
      RowBox[{"ImageSize", "\[Rule]", 
       RowBox[{"Scaled", "[", "0.8", "]"}]}]}], "]"}], ",", 
    RowBox[{"ListPlot", "[", 
     RowBox[{"binarySearchResults", ",", 
      RowBox[{"Joined", "\[Rule]", "True"}], ",", 
      RowBox[{"PlotStyle", "\[Rule]", "Red"}], ",", 
      RowBox[{"PlotLegends", "\[Rule]", 
       RowBox[{"{", "\"\<Binary Search\>\"", "}"}]}]}], "]"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"ListPlot", "[", 
     RowBox[{"mapSearchResults", ",", 
      RowBox[{"Joined", "\[Rule]", "True"}], ",", 
      RowBox[{"PlotStyle", "\[Rule]", "Green"}], ",", 
      RowBox[{"PlotLegends", "\[Rule]", 
       RowBox[{"{", "\"\<Search by Key\>\"", "}"}]}]}], "]"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"linearFunc", " ", "=", " ", 
   RowBox[{"Interpolation", "[", "linearSearchResults", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"binaryFunc", " ", "=", " ", 
   RowBox[{"Interpolation", "[", "binarySearchResults", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"mapFunc", " ", "=", " ", 
   RowBox[{"Interpolation", "[", "mapSearchResults", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Plot2", " ", "=", " ", 
  RowBox[{"LogPlot", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"linearFunc", "[", "x", "]"}], ",", 
      RowBox[{"binaryFunc", "[", "x", "]"}], ",", " ", 
      RowBox[{"mapFunc", "[", "x", "]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", "0", ",", 
      RowBox[{"10", "^", "5"}]}], "}"}], ",", 
    RowBox[{"PlotStyle", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"Blue", ",", "Red", ",", " ", "Green"}], "}"}]}], ",", 
    RowBox[{"PlotLegends", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
      "\"\<Linear Search\>\"", ",", "\"\<Binary Search\>\"", ",", 
       "\"\<Search by Key\>\""}], "}"}]}], ",", 
    RowBox[{
    "PlotLabel", "\[Rule]", 
     "\"\<Compare binary Search, linear search and search using search by key \
(Log scale)\>\""}], ",", 
    RowBox[{"PlotTheme", "\[Rule]", "\"\<Detailed\>\""}], ",", 
    RowBox[{"ImageSize", "\[Rule]", 
     RowBox[{"Scaled", "[", "0.8", "]"}]}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"Plot3", " ", "=", " ", 
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{"linearFunc", "[", "x", "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", "0", ",", 
      RowBox[{"10", "^", "5"}]}], "}"}], ",", 
    RowBox[{"PlotStyle", "\[Rule]", "Blue"}], ",", 
    RowBox[{"PlotLegends", "\[Rule]", 
     RowBox[{"{", "\"\<Linear Search\>\"", "}"}]}], ",", 
    RowBox[{"AxesLabel", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"\"\<n\>\"", ",", "\"\<t\>\""}], "}"}]}], ",", 
    RowBox[{"PlotTheme", "\[Rule]", "\"\<Detailed\>\""}], ",", 
    RowBox[{"ImageSize", "\[Rule]", 
     RowBox[{"Scaled", "[", "0.8", "]"}]}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"Plot4", " ", "=", " ", 
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{"binaryFunc", "[", "x", "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", "0", ",", 
      RowBox[{"10", "^", "5"}]}], "}"}], ",", 
    RowBox[{"PlotStyle", "\[Rule]", "Blue"}], ",", 
    RowBox[{"PlotLegends", "\[Rule]", 
     RowBox[{"{", "\"\<Binary Search\>\"", "}"}]}], ",", 
    RowBox[{"AxesLabel", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"\"\<n\>\"", ",", "\"\<t\>\""}], "}"}]}], ",", 
    RowBox[{"PlotTheme", "->", "\"\<Detailed\>\""}], ",", 
    RowBox[{"ImageSize", "\[Rule]", 
     RowBox[{"Scaled", "[", "0.8", "]"}]}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"Plot5", " ", "=", " ", 
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{"mapFunc", "[", "x", "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", "0", ",", 
      RowBox[{"10", "^", "5"}]}], "}"}], ",", 
    RowBox[{"PlotStyle", "\[Rule]", "Blue"}], ",", 
    RowBox[{"PlotLegends", "\[Rule]", 
     RowBox[{"{", "\"\<Search by Key\>\"", "}"}]}], ",", 
    RowBox[{"AxesLabel", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"\"\<n\>\"", ",", "\"\<t\>\""}], "}"}]}], ",", 
    RowBox[{"PlotTheme", "->", "\"\<Detailed\>\""}], ",", 
    RowBox[{"ImageSize", "\[Rule]", 
     RowBox[{"Scaled", "[", "0.8", "]"}]}]}], 
   "]"}]}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.7166328489078903`*^9, 3.7166328519046392`*^9}, {
   3.7166328898347483`*^9, 3.7166329837*^9}, {3.7166333327978086`*^9, 
   3.71663344430938*^9}, {3.7166336235949707`*^9, 3.7166338793083553`*^9}, {
   3.716633930823107*^9, 3.716634129989297*^9}, {3.7166342836724577`*^9, 
   3.7166343394261303`*^9}, {3.7166344883692427`*^9, 
   3.7166345817832484`*^9}, {3.7166346120671644`*^9, 
   3.7166347025569077`*^9}, {3.7166347332104883`*^9, 3.716634758008203*^9}, {
   3.7166348057320786`*^9, 3.7166348866444254`*^9}, {3.716634934678432*^9, 
   3.716634950151271*^9}, {3.71663498447202*^9, 3.7166349940275564`*^9}, 
   3.716635906785164*^9, {3.716636077735529*^9, 3.716636293193735*^9}, {
   3.7166364065775924`*^9, 3.7166364078924465`*^9}, {3.716636437995269*^9, 
   3.716636450019704*^9}, {3.716636515873743*^9, 3.7166366509453373`*^9}, {
   3.716636681553017*^9, 3.7166366860059395`*^9}, {3.716636720243805*^9, 
   3.716636748869069*^9}, {3.7166369194524918`*^9, 3.7166369675112753`*^9}, {
   3.7166370306581407`*^9, 3.716637354908517*^9}, {3.7166377197330723`*^9, 
   3.7166380176722183`*^9}, {3.7166384508211837`*^9, 3.71663845744549*^9}, {
   3.716638505947996*^9, 3.7166387679333057`*^9}, {3.716638803632849*^9, 
   3.716638967416075*^9}, {3.7166390763614926`*^9, 3.7166391959590697`*^9}, {
   3.7166392388178177`*^9, 3.7166394545961475`*^9}, {3.7166395395713806`*^9, 
   3.716639659498789*^9}, {3.7166411022356586`*^9, 3.716641103250759*^9}, {
   3.716641711133936*^9, 3.71664172025766*^9}, 3.716641753683111*^9, {
   3.7166418141201677`*^9, 3.716641816476329*^9}, {3.7166418609206142`*^9, 
   3.7166418675560446`*^9}, {3.716711296988597*^9, 3.7167113173939104`*^9}, {
   3.7167113619186044`*^9, 3.7167114625600986`*^9}, {3.716711574748316*^9, 
   3.716711620907818*^9}, {3.7167117109591064`*^9, 3.7167117237280517`*^9}, 
   3.716711800389514*^9, {3.716712010856454*^9, 3.7167120510507917`*^9}, {
   3.7167120935955935`*^9, 3.716712200076744*^9}, {3.7167122366521745`*^9, 
   3.716712481875655*^9}, {3.7167127637502875`*^9, 3.7167128084013653`*^9}, {
   3.716712874651329*^9, 3.716712924392576*^9}, {3.716712972307913*^9, 
   3.7167129797804585`*^9}, {3.716713023254218*^9, 3.7167130241068463`*^9}, {
   3.7167144145532*^9, 3.716714448598859*^9}, {3.7167145660361986`*^9, 
   3.7167145677412815`*^9}, {3.716714606816677*^9, 3.7167146895122705`*^9}, {
   3.7167147775297885`*^9, 3.7167147781917534`*^9}, {3.716714810136058*^9, 
   3.7167148653152523`*^9}, {3.719593876147151*^9, 3.7195938788610754`*^9}, {
   3.7195945510529003`*^9, 3.7195945514617567`*^9}, {3.7195945901833544`*^9, 
   3.719594591684504*^9}, {3.7195979088928356`*^9, 3.719597943416867*^9}, {
   3.719597995212073*^9, 3.7195979952511005`*^9}, 3.7195980557818623`*^9, {
   3.7195981215731726`*^9, 3.7195981308400292`*^9}, {3.7195981770688176`*^9, 
   3.7195981771258535`*^9}, {3.7195982187188616`*^9, 3.719598552148904*^9}, {
   3.719598591311916*^9, 3.719598650101863*^9}, {3.719598818285612*^9, 
   3.7195988337979136`*^9}, {3.7195988946714144`*^9, 3.7195989222683973`*^9}, 
   3.7195992042957697`*^9, {3.7195995521485615`*^9, 3.719599554704884*^9}, {
   3.7196000211273165`*^9, 3.719600123886583*^9}, {3.7196001780141506`*^9, 
   3.71960018317339*^9}, {3.7196003493908834`*^9, 3.719600393644693*^9}, {
   3.719600455064816*^9, 3.7196004899875283`*^9}, {3.7196005883460608`*^9, 
   3.7196005986903515`*^9}, {3.7196007010691895`*^9, 3.719600742698332*^9}, {
   3.7196007770305595`*^9, 3.7196008163787613`*^9}, {3.719600849536656*^9, 
   3.71960086049301*^9}, {3.719600929990226*^9, 3.719600930569237*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"CreateDirectory", "::", "filex"}], "MessageName"], 
  RowBox[{
  ":", " "}], \
"\<\"\[NoBreak]\\!\\(\\\"C:\\\\\\\\Users\\\\\\\\Petr\\\\\\\\Desktop\\\\\\\\\
Projects\\\\\\\\Programming Techniques\\\\\\\\shown results\\\\\\\\\\\"\\)\
\[NoBreak] already exists. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/CreateDirectory\\\", ButtonNote -> \
\\\"CreateDirectory::filex\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{
  3.71671280911168*^9, 3.7167128758761096`*^9, {3.716712925028591*^9, 
   3.716712928857549*^9}, {3.7167145563215847`*^9, 3.716714569312237*^9}, 
   3.716714638027997*^9, 3.7167146943829775`*^9, 3.71671475818911*^9, 
   3.71671487496727*^9, 3.716714906557728*^9, 3.7167152555111136`*^9, 
   3.7195946021804795`*^9, 3.7195987477175884`*^9, {3.7195988789392424`*^9, 
   3.7195989265098953`*^9}, 3.719599139620545*^9, 3.7195992073864465`*^9, 
   3.7195998807942915`*^9, {3.719600031232263*^9, 3.7196000493475103`*^9}, {
   3.7196000996462955`*^9, 3.7196001254858646`*^9}, 3.7196001846884556`*^9, {
   3.7196003517696085`*^9, 3.7196003719018483`*^9}, 3.719600409361558*^9, 
   3.7196004576283846`*^9, {3.719600491777182*^9, 3.719600517040056*^9}, 
   3.719600600167799*^9, 3.7196006477648726`*^9, 3.719600702757693*^9, {
   3.7196007456324415`*^9, 3.719600789012987*^9}, 3.7196008266979647`*^9, 
   3.7196008703552923`*^9, 3.7196009488755336`*^9, 3.719601085741945*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"CreateDirectory", "::", "filex"}], "MessageName"], 
  RowBox[{
  ":", " "}], \
"\<\"\[NoBreak]\\!\\(\\\"C:\\\\\\\\Users\\\\\\\\Petr\\\\\\\\Desktop\\\\\\\\\
Projects\\\\\\\\Programming Techniques\\\\\\\\shown results\\\\\\\\search\\\\\
\\\\\\\"\\)\[NoBreak] already exists. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\
\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/CreateDirectory\\\", ButtonNote -> \
\\\"CreateDirectory::filex\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{
  3.71671280911168*^9, 3.7167128758761096`*^9, {3.716712925028591*^9, 
   3.716712928857549*^9}, {3.7167145563215847`*^9, 3.716714569312237*^9}, 
   3.716714638027997*^9, 3.7167146943829775`*^9, 3.71671475818911*^9, 
   3.71671487496727*^9, 3.716714906557728*^9, 3.7167152555111136`*^9, 
   3.7195946021804795`*^9, 3.7195987477175884`*^9, {3.7195988789392424`*^9, 
   3.7195989265098953`*^9}, 3.719599139620545*^9, 3.7195992073864465`*^9, 
   3.7195998807942915`*^9, {3.719600031232263*^9, 3.7196000493475103`*^9}, {
   3.7196000996462955`*^9, 3.7196001254858646`*^9}, 3.7196001846884556`*^9, {
   3.7196003517696085`*^9, 3.7196003719018483`*^9}, 3.719600409361558*^9, 
   3.7196004576283846`*^9, {3.719600491777182*^9, 3.719600517040056*^9}, 
   3.719600600167799*^9, 3.7196006477648726`*^9, 3.719600702757693*^9, {
   3.7196007456324415`*^9, 3.719600789012987*^9}, 3.7196008266979647`*^9, 
   3.7196008703552923`*^9, 3.7196009488755336`*^9, 3.7196010858159957`*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {{{}, {}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[0.012833333333333334`], 
          AbsoluteThickness[1.6], 
          RGBColor[0, 0, 1]], 
         LineBox[{{5., 0.00001957427061099216}, {10., 
          3.2257224976915296`*^-6}, {50., 8.760769056230609*^-6}, {100., 
          0.000010153694680233895`}, {500., 0.00004347394184388981}, {1000., 
          0.00008229257962860948}, {5000., 0.0005753882505257323}, {10000., 
          0.001503663211111439}, {50000., 0.004341089363143702}, {100000., 
          0.009024911741666664}, {500000., 0.0436259906725283}, {1.*^6, 
          0.08903111392628915}, {1.2141550834982572`*^6, 
          0.1090497461393004}}]}}}, {}}, {{}, {{{}, {}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[0.012833333333333334`], 
          AbsoluteThickness[1.6], 
          RGBColor[1, 0, 0]], 
         LineBox[{{5., 3.885529372219416*^-6}, {10., 4.105464997061987*^-6}, {
          50., 5.351766871170005*^-6}, {100., 5.8649499958029*^-6}, {500., 
          8.50417749391416*^-6}, {1000., 0.000010080382805283117`}, {5000., 
          0.000022836649046176216`}, {10000., 0.0000383054546601036}, {50000.,
           0.0000759511024456927}, {100000., 0.00009845784805460057}, {
          500000., 0.00030538061509375323`}, {1.*^6, 0.0005250963043067714}, {
          1.503546099303397*^6, 
          0.0007554238874276281}}]}}}, {}}, {{}, {{{}, {}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[0.012833333333333334`], 
          AbsoluteThickness[1.6], 
          RGBColor[0, 1, 0]], 
         LineBox[{{5., 4.28874468443087*^-6}, {10., 3.812217497271928*^-6}, {
          50., 4.508680309273441*^-6}, {100., 3.922185309692717*^-6}, {500., 
          6.378133120435448*^-6}, {1000., 9.127328430971749*^-6}, {5000., 
          0.00003236719278936207}, {10000., 0.00006429451432892197}, {50000., 
          0.00017730476956057117`}, {100000., 0.0003053806150939309}, {
          500000., 0.0015287358723419687`}, {1.*^6, 0.0029869823769232084`}, {
          1.2908426393322775`*^6, 0.0038154065638282752`}}]}}}, {}}}, {
    DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, AxesOrigin -> {0, 0}, 
     PlotRange -> {{0, 1.249925*^6}, {0, 0.1090497461393004}}, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, False}, 
     AxesLabel -> {
       FormBox["\"n\"", TraditionalForm], 
       FormBox["\"t\"", TraditionalForm]}, AxesOrigin -> {0, 0}, 
     DisplayFunction :> Identity, Frame -> {{True, True}, {True, True}}, 
     FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> Automatic, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {Automatic, Automatic}, GridLinesStyle -> Directive[
       GrayLevel[0.4, 0.5], 
       AbsoluteThickness[1], 
       AbsoluteDashing[{1, 2}]], ImageSize -> Scaled[0.8], Method -> {}, 
     PlotLabel -> 
     FormBox["\"Compare binary Search, linear search and search using search \
by key\"", TraditionalForm], 
     PlotRange -> {{0, 1.249925*^6}, {0, 0.1090497461393004}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    TagBox[
     GridBox[{{
        FormBox[
         TemplateBox[{"\"Linear Search\""}, "PointLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.231], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.231], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"PointLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.012833333333333334`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 0, 1]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "True", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"Binary Search\""}, "PointLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.231], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.231], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"PointLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.012833333333333334`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "True", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"Search by Key\""}, "PointLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.231], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.231], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"PointLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.012833333333333334`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0.6666666666666666, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 1, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 1, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "True", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}}, 
      GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      GridBoxSpacings -> {"Columns" -> {{0}}}], "Grid"], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.719599139870815*^9, 3.71959920752015*^9, 3.719599880945788*^9, {
   3.7196000342618704`*^9, 3.7196000494755745`*^9}, {3.7196000997841635`*^9, 
   3.7196001257100744`*^9}, 3.719600184908635*^9, {3.7196003519947853`*^9, 
   3.7196003721355124`*^9}, 3.719600409602453*^9, 3.719600457874558*^9, {
   3.719600492023857*^9, 3.719600517279354*^9}, 3.719600600411542*^9, 
   3.7196006480055437`*^9, 3.7196007030163746`*^9, {3.7196007459156413`*^9, 
   3.7196007894187913`*^9}, 3.7196008270933447`*^9, 3.719600870737809*^9, 
   3.7196009492785964`*^9, 3.7196010859490905`*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {}, {
       Directive[
        Opacity[1.], 
        AbsoluteThickness[1.6], 
        RGBColor[0, 0, 1]], 
       LineBox[{{0.002040816326530612, -10.084419315729082`}, {
        10.736453750199175`, -13.574867237109258`}, {
        61.341543295598825`, -10.488613564808283`}, {
        92.01129453523498, -10.329917714811453`}, {
        122.68104577487112`, -11.588352249357733`}, {
        153.35079701450726`, -11.862670001433576`}, {
        184.02054825414342`, -12.41179542528708}, {
        214.69029949377955`, -14.019316118344198`}, {
        222.35773730368848`, -18.034208478653824`}}], 
       LineBox[CompressedData["
1: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
wzfb1W9Rmwj6HweiKes=
        "]]}, {
       Directive[
        Opacity[1.], 
        AbsoluteThickness[1.6], 
        RGBColor[1, 0, 0]], 
       LineBox[CompressedData["
1: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
D0NGYVFmrf30AAlJRo8cf/x+FHRH1BR2UfH52x/48NnkKMim7I/5OkZCBuU+
Ny4So/Atv71T6ReuJ7Q8DKRmR0FJbcUnAfvbJbtdaGkU/i3KiD8Yx/XCk9Nl
02vooBSS+vbgJAlVUDdOm8jSYUv3uc5KBs6nDnzdZDk63HtdKaZE4PyxyF45
s58OD21HBlKxLTfMBAUdpkPzi4LiUNwP8fzXIfv5JB3G1nGN2Mzg+7Du+8Zg
XTrIdTZ3DmCbnP2yYKpPh4B9ImA8i8+7bXHtrDEdvjeGumrN4Xw8k5P12ZQO
x+7ePYaw2bzTIoLN6ZDrqR14eB7fb2sS7plZ0eHy0FWtfGzDyNeWMtZ06BQn
e+5dIKF7YuHaczfo0FIac/YpdlLmU/kqBzr08/QcjcD+ftBPOMSFDv+26e+J
xZ7/fH/Z7A4dlAemJZKxRc+4Dst40MHyv4+S77F1ft5snHtAB0mxFLli7Jip
y69DHtFhvXjBhXrsWg9jn0uBdPASqnNvw57i0reRfY7XT7k7oRdbY7u6cnUE
Hf6kdPFPYY+eFG+dT6SD0DdTNUHcT25o31ZSnUKHXzmecTuwj5gLxodm0OEQ
r/lqMvYzVy6H3fl0yCs8+PswtkLCKK/5ZzrA8evCFtj3/2ao1w7SIcHjbXMW
9ucuyQ/DNDpopy55FmPzfIiT5RqjQ/eNbqUq7Ain8E3HCTpsU50p78LOHPYY
rlw1Bjy/PfdxLuJ4b9IOrCCNwdoLfTFm2P8ljTYXXB0DnR28+pv+4vypK26R
SB+DkSN2zS9wf2zE/WN6oP8XnDR9n56A++mfmj2jn8bGQbip4JgUhzh698c9
Dk1NwI6wUFoStzjSFDzbKEqbhFRb4aJ6XnEk9MH7osTkb/i8W3zVL35xpHL+
yfAq4jdsf1DfO4NtORfuPDDzGzxi03JXsHOUUwJfL/2Gei26ptBacaRT9K1k
A/8UDPCf3wnYnsUiIv9kpyD0r7VbBPZoaUH3D5sp0NEiIg6uE0frTD9ez7ef
gn6HRD91bMW/X5ghTlMwdfmc/Sls36M9fLpuU3DW9Km4Ofb28lVHP/vj5zmP
yj/G1q84E52dPAVJy7ylrdgln+im/rQp0OB9o3NtvThKrWSzM6BPwUGrp4s3
sV9WbfHYNjEFsrav3t7Bdvty8uX76Slgs2S2+2NHW5/7ZbeKATcvRzSlYZs4
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
KD7sJ/xJ8yu2C7ByYWNL8i0S+h8ICabV
        "]]}, {
       Directive[
        Opacity[1.], 
        AbsoluteThickness[1.6], 
        RGBColor[0, 1, 0]], 
       LineBox[{{0.002040816326530612, -12.213171685171515`}, {
        30.671792055962676`, -12.569411890246231`}, {
        61.341543295598825`, -12.169189206176798`}, {
        92.01129453523498, -12.217316467101137`}, {
        122.68104577487112`, -12.633731199323329`}, {
        153.35079701450726`, -13.07481182897994}, {
        184.02054825414342`, -14.110896625173881`}, {
        199.3554238739614, -17.128728197391833`}}], 
       LineBox[CompressedData["
1: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
        "]]}}}, {Ticks -> {Automatic, 
       Charting`ScaledTicks[{Log, Exp}]}, GridLines -> {Automatic, 
       Charting`ScaledTickValues[{Log, Exp}]}, FrameTicks -> {{
        Charting`ScaledTicks[{Log, Exp}], 
        Charting`ScaledFrameTicks[{Log, Exp}]}, {Automatic, Automatic}}, 
     AxesOrigin -> {0, -18.70053057217745}, 
     PlotRange -> {{0, 100000}, {-18.70053057217745, -4.041444514657713}}, 
     DisplayFunction -> Identity, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None}, DisplayFunction -> 
     Identity, DisplayFunction -> Identity, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "ClippingRange" -> {{{0.002040816326530612, 
        99999.99795918367}, {-18.034208478653824`, -4.707766608181338}}, {{
        0.002040816326530612, 
        99999.99795918367}, {-18.034208478653824`, -4.707766608181338}}}}, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, False}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, -18.5}, 
     CoordinatesToolOptions -> {"DisplayFunction" -> ({
         Part[#, 1], 
         Exp[
          Part[#, 2]]}& ), "CopiedValueFunction" -> ({
         Part[#, 1], 
         Exp[
          Part[#, 2]]}& )}, DisplayFunction :> Identity, 
     Frame -> {{True, True}, {True, True}}, 
     FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> Automatic, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {Automatic, Automatic}, GridLinesStyle -> Directive[
       GrayLevel[0.4, 0.5], 
       AbsoluteThickness[1], 
       AbsoluteDashing[{1, 2}]], ImageSize -> Scaled[0.8], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None}, PlotLabel -> 
     FormBox["\"Compare binary Search, linear search and search using search \
by key (Log scale)\"", TraditionalForm], 
     PlotRange -> {{0, 100000}, {-18.034208478653824`, -4.707766608181338}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
      "\"Linear Search\"", "\"Binary Search\"", "\"Search by Key\""}, 
      "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 0, 1]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0.6666666666666666, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 1, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 1, 0], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.719599139870815*^9, 3.71959920752015*^9, 3.719599880945788*^9, {
   3.7196000342618704`*^9, 3.7196000494755745`*^9}, {3.7196000997841635`*^9, 
   3.7196001257100744`*^9}, 3.719600184908635*^9, {3.7196003519947853`*^9, 
   3.7196003721355124`*^9}, 3.719600409602453*^9, 3.719600457874558*^9, {
   3.719600492023857*^9, 3.719600517279354*^9}, 3.719600600411542*^9, 
   3.7196006480055437`*^9, 3.7196007030163746`*^9, {3.7196007459156413`*^9, 
   3.7196007894187913`*^9}, 3.7196008270933447`*^9, 3.719600870737809*^9, 
   3.7196009492785964`*^9, 3.719601086037652*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {}, {
       Directive[
        Opacity[1.], 
        AbsoluteThickness[1.6], 
        RGBColor[0, 0, 1]], 
       LineBox[CompressedData["
1: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
        "]]}}}, {
    DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, False}, 
     AxesLabel -> {
       FormBox["\"n\"", TraditionalForm], 
       FormBox["\"t\"", TraditionalForm]}, AxesOrigin -> {0, 0}, 
     DisplayFunction :> Identity, Frame -> {{True, True}, {True, True}}, 
     FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> Automatic, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {Automatic, Automatic}, GridLinesStyle -> Directive[
       GrayLevel[0.4, 0.5], 
       AbsoluteThickness[1], 
       AbsoluteDashing[{1, 2}]], ImageSize -> Scaled[0.8], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None}, 
     PlotRange -> {{0, 100000}, {-0.000015864008306556695`, 
       0.009024911253837583}}, PlotRangeClipping -> True, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"Linear Search\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{"Directive", "[", 
               RowBox[{
                 RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                 RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 0, 1]"], Appearance -> None, BaseStyle -> {},
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                   ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                  False]}], "]"}], "}"}], ",", 
           RowBox[{"{", #, "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.719599139870815*^9, 3.71959920752015*^9, 3.719599880945788*^9, {
   3.7196000342618704`*^9, 3.7196000494755745`*^9}, {3.7196000997841635`*^9, 
   3.7196001257100744`*^9}, 3.719600184908635*^9, {3.7196003519947853`*^9, 
   3.7196003721355124`*^9}, 3.719600409602453*^9, 3.719600457874558*^9, {
   3.719600492023857*^9, 3.719600517279354*^9}, 3.719600600411542*^9, 
   3.7196006480055437`*^9, 3.7196007030163746`*^9, {3.7196007459156413`*^9, 
   3.7196007894187913`*^9}, 3.7196008270933447`*^9, 3.719600870737809*^9, 
   3.7196009492785964`*^9, 3.719601086263812*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {}, {
       Directive[
        Opacity[1.], 
        AbsoluteThickness[1.6], 
        RGBColor[0, 0, 1]], 
       LineBox[CompressedData["
1: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
pcb2kxQKE0qf+XuOC1nHQrvtv0qh/wHVs8p8
        "]]}}}, {
    DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, False}, 
     AxesLabel -> {
       FormBox["\"n\"", TraditionalForm], 
       FormBox["\"t\"", TraditionalForm]}, AxesOrigin -> {0, 0}, 
     DisplayFunction :> Identity, Frame -> {{True, True}, {True, True}}, 
     FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> Automatic, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {Automatic, Automatic}, GridLinesStyle -> Directive[
       GrayLevel[0.4, 0.5], 
       AbsoluteThickness[1], 
       AbsoluteDashing[{1, 2}]], ImageSize -> Scaled[0.8], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None}, 
     PlotRange -> {{0, 100000}, {0., 0.00009845784359573347}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"Binary Search\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{"Directive", "[", 
               RowBox[{
                 RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                 RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 0, 1]"], Appearance -> None, BaseStyle -> {},
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                   ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                  False]}], "]"}], "}"}], ",", 
           RowBox[{"{", #, "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.719599139870815*^9, 3.71959920752015*^9, 3.719599880945788*^9, {
   3.7196000342618704`*^9, 3.7196000494755745`*^9}, {3.7196000997841635`*^9, 
   3.7196001257100744`*^9}, 3.719600184908635*^9, {3.7196003519947853`*^9, 
   3.7196003721355124`*^9}, 3.719600409602453*^9, 3.719600457874558*^9, {
   3.719600492023857*^9, 3.719600517279354*^9}, 3.719600600411542*^9, 
   3.7196006480055437`*^9, 3.7196007030163746`*^9, {3.7196007459156413`*^9, 
   3.7196007894187913`*^9}, 3.7196008270933447`*^9, 3.719600870737809*^9, 
   3.7196009492785964`*^9, 3.7196010863318605`*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {}, {
       Directive[
        Opacity[1.], 
        AbsoluteThickness[1.6], 
        RGBColor[0, 0, 1]], 
       LineBox[CompressedData["
1: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
OGc=
        "]]}}}, {
    DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, False}, 
     AxesLabel -> {
       FormBox["\"n\"", TraditionalForm], 
       FormBox["\"t\"", TraditionalForm]}, AxesOrigin -> {0, 0}, 
     DisplayFunction :> Identity, Frame -> {{True, True}, {True, True}}, 
     FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> Automatic, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {Automatic, Automatic}, GridLinesStyle -> Directive[
       GrayLevel[0.4, 0.5], 
       AbsoluteThickness[1], 
       AbsoluteDashing[{1, 2}]], ImageSize -> Scaled[0.8], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None}, 
     PlotRange -> {{0, 100000}, {-4.383018611113535*^-6, 
       0.00030538060280051903`}}, PlotRangeClipping -> True, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"Search by Key\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{"Directive", "[", 
               RowBox[{
                 RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                 RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 0, 1]"], Appearance -> None, BaseStyle -> {},
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                   ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                  False]}], "]"}], "}"}], ",", 
           RowBox[{"{", #, "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.719599139870815*^9, 3.71959920752015*^9, 3.719599880945788*^9, {
   3.7196000342618704`*^9, 3.7196000494755745`*^9}, {3.7196000997841635`*^9, 
   3.7196001257100744`*^9}, 3.719600184908635*^9, {3.7196003519947853`*^9, 
   3.7196003721355124`*^9}, 3.719600409602453*^9, 3.719600457874558*^9, {
   3.719600492023857*^9, 3.719600517279354*^9}, 3.719600600411542*^9, 
   3.7196006480055437`*^9, 3.7196007030163746`*^9, {3.7196007459156413`*^9, 
   3.7196007894187913`*^9}, 3.7196008270933447`*^9, 3.719600870737809*^9, 
   3.7196009492785964`*^9, 3.719601086390401*^9}]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{"\"\<Comp1.gif\>\"", ",", "Plot1", ",", 
    RowBox[{"ImageSize", "\[Rule]", "2048"}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{"\"\<Comp2.gif\>\"", ",", "Plot2", ",", 
    RowBox[{"ImageSize", "\[Rule]", "2048"}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{"\"\<Linear.gif\>\"", ",", "Plot3", ",", 
    RowBox[{"ImageSize", "\[Rule]", "2048"}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{"\"\<Binary.gif\>\"", ",", "Plot4", ",", 
    RowBox[{"ImageSize", "\[Rule]", "2048"}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{"\"\<Map.gif\>\"", ",", "Plot5", ",", 
    RowBox[{"ImageSize", "\[Rule]", "2048"}]}], "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.71664110869312*^9, 3.716641146244195*^9}, {
  3.7166412022296147`*^9, 3.716641205389699*^9}, {3.716641347274222*^9, 
  3.7166413580157037`*^9}, {3.7166414457407713`*^9, 3.716641500648283*^9}, {
  3.7166415725013237`*^9, 3.7166415924800997`*^9}, {3.716641782741521*^9, 
  3.716641783365637*^9}, {3.716712493848918*^9, 3.716712541256122*^9}, {
  3.716714795181678*^9, 3.7167147992854233`*^9}, {3.719598218784408*^9, 
  3.719598243933489*^9}, {3.7195994527640038`*^9, 3.719599469495936*^9}, {
  3.7195995613430743`*^9, 3.719599566804941*^9}, {3.7196005157182493`*^9, 
  3.719600515806099*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"grid", " ", "=", " ", 
  RowBox[{"Grid", "[", 
   RowBox[{
    RowBox[{"Transpose", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Join", "[", 
        RowBox[{
         RowBox[{"{", "\"\<Time\>\"", "}"}], ",", 
         RowBox[{"binarySearchResults", "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", "1"}], "]"}], "]"}]}], "]"}], ",", 
       RowBox[{"Join", "[", 
        RowBox[{
         RowBox[{"{", "\"\<Linear Search\>\"", "}"}], ",", 
         RowBox[{"linearSearchResults", "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", "2"}], "]"}], "]"}]}], "]"}], ",", 
       RowBox[{"Join", "[", 
        RowBox[{
         RowBox[{"{", "\"\<Binary Search\>\"", "}"}], ",", 
         RowBox[{"binarySearchResults", "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", "2"}], "]"}], "]"}]}], "]"}], ",", 
       RowBox[{"Join", "[", 
        RowBox[{
         RowBox[{"{", "\"\<Search by Key\>\"", "}"}], ",", 
         RowBox[{"mapSearchResults", "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", "2"}], "]"}], "]"}]}], "]"}]}], "}"}], "]"}], 
    ",", 
    RowBox[{"Frame", "\[Rule]", "All"}], ",", 
    RowBox[{"Alignment", "\[Rule]", "Left"}], ",", 
    RowBox[{"Background", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"None", ",", 
       RowBox[{"{", "Yellow", "}"}]}], "}"}]}], ",", 
    RowBox[{"ItemStyle", "\[Rule]", 
     RowBox[{"Directive", "[", 
      RowBox[{
       RowBox[{"FontSize", "\[Rule]", "20"}], ",", "Bold"}], "]"}]}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.716713751390085*^9, 3.7167137514206266`*^9}, {
   3.7167138547988224`*^9, 3.716713858902309*^9}, {3.7167139538829703`*^9, 
   3.716713987760606*^9}, {3.7167140374458113`*^9, 3.71671405406323*^9}, {
   3.716714092876899*^9, 3.7167141043085494`*^9}, {3.719594669746122*^9, 
   3.719594673946548*^9}, {3.7195979953701706`*^9, 3.719597995372173*^9}, {
   3.7195980772600527`*^9, 3.719598077263054*^9}, {3.7195981771413803`*^9, 
   3.7195981884165535`*^9}, {3.7195982439354887`*^9, 
   3.7195982643558407`*^9}, {3.71959871093808*^9, 3.71959873671665*^9}, 
   3.7196004017953653`*^9}],

Cell[BoxData[
 TagBox[GridBox[{
    {"\<\"Time\"\>", "\<\"Linear Search\"\>", "\<\"Binary Search\"\>", \
"\<\"Search by Key\"\>"},
    {"5", "0.00001957427061099216`", "3.885529372219416`*^-6", 
     "4.28874468443087`*^-6"},
    {"10", "3.2257224976915296`*^-6", "4.105464997061987`*^-6", 
     "3.812217497271928`*^-6"},
    {"50", "8.760769056230609`*^-6", "5.351766871170005`*^-6", 
     "4.508680309273441`*^-6"},
    {"100", "0.000010153694680233895`", "5.8649499958029`*^-6", 
     "3.922185309692717`*^-6"},
    {"500", "0.00004347394184388981`", "8.50417749391416`*^-6", 
     "6.378133120435448`*^-6"},
    {"1000", "0.00008229257962860948`", "0.000010080382805283117`", 
     "9.127328430971749`*^-6"},
    {"5000", "0.0005753882505257323`", "0.000022836649046176216`", 
     "0.00003236719278936207`"},
    {"10000", "0.001503663211111439`", "0.0000383054546601036`", 
     "0.00006429451432892197`"},
    {"50000", "0.004341089363143702`", "0.0000759511024456927`", 
     "0.00017730476956057117`"},
    {"100000", "0.009024911741666664`", "0.00009845784805460057`", 
     "0.0003053806150939309`"},
    {"500000", "0.0436259906725283`", "0.00030538061509375323`", 
     "0.0015287358723419687`"},
    {"1000000", "0.08903111392628915`", "0.0005250963043067714`", 
     "0.0029869823769232084`"},
    {"5000000", "0.4629401874071277`", "0.0023547407673618183`", 
     "0.01438041751844139`"}
   },
   AutoDelete->False,
   GridBoxAlignment->{"Columns" -> {{Left}}},
   GridBoxBackground->{"Columns" -> {{None}}, "Rows" -> {
       RGBColor[1, 1, 0]}},
   GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
   GridBoxItemStyle->{"Columns" -> {{
        Directive[FontSize -> 20, Bold]}}, "Rows" -> {{
        Directive[FontSize -> 20, Bold]}}}],
  "Grid"]], "Output",
 CellChangeTimes->{
  3.719598752310638*^9, {3.7195988824346485`*^9, 3.7195989300440264`*^9}, 
   3.7195994117715397`*^9, 3.7195999057895412`*^9, 3.7196000386789837`*^9, {
   3.7196001044640293`*^9, 3.719600130072216*^9}, 3.7196001893409595`*^9, 
   3.7196004128907433`*^9, 3.7196004615085907`*^9, {3.719600495941467*^9, 
   3.7196005213963943`*^9}, 3.719600602944832*^9, 3.719600650782196*^9, {
   3.719600748924259*^9, 3.7196007924345427`*^9}, 3.7196008302193155`*^9, 
   3.7196008743909693`*^9, 3.7196009532417135`*^9, 3.7196010890090523`*^9}]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{"\"\<TableSerch.gif\>\"", ",", "grid", ",", 
    RowBox[{"ImageSize", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"2048", ",", "720"}], "}"}]}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{"\"\<TableSeach.xls\>\"", ",", "grid", ",", 
    RowBox[{"ImageSize", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"2048", ",", "720"}], "}"}]}]}], "]"}], 
  ";"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.7167141124319644`*^9, 3.7167141580770206`*^9}, {
   3.7167142286741667`*^9, 3.7167142875889273`*^9}, 3.716714849258524*^9, {
   3.7167150760023284`*^9, 3.716715087906725*^9}, {3.7167151787587595`*^9, 
   3.716715179553131*^9}, {3.7195994773830156`*^9, 3.7195994864164047`*^9}}]
},
WindowSize->{1350, 685},
WindowMargins->{{-8, Automatic}, {Automatic, 0}},
Magnification:>0.9 Inherited,
FrontEndVersion->"10.2 for Microsoft Windows (64-bit) (July 7, 2015)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 13560, 322, 1035, "Input"],
Cell[14143, 346, 1513, 25, 19, "Message"],
Cell[15659, 373, 1529, 25, 19, "Message"],
Cell[17191, 400, 20469, 407, 645, "Output"],
Cell[37663, 809, 44266, 797, 637, "Output"],
Cell[81932, 1608, 14906, 278, 625, "Output"],
Cell[96841, 1888, 20170, 364, 619, "Output"],
Cell[117014, 2254, 14492, 272, 619, "Output"]
}, Open  ]],
Cell[131521, 2529, 1496, 33, 193, "Input"],
Cell[CellGroupData[{
Cell[133042, 2566, 2146, 51, 102, "Input"],
Cell[135191, 2619, 2409, 48, 314, "Output"]
}, Open  ]],
Cell[137615, 2670, 796, 18, 104, "Input"]
}
]
*)

(* End of internal cache information *)
